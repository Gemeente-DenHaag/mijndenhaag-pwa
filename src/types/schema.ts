/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/klantcontacten": {
    /**
     * Alle KLANTCONTACTen opvragen.
     *
     * **DEPRECATED**: gebruik de contactmomenten API in plaats van deze endpoint.
     */
    get: operations["klantcontact_list"];
    /**
     * Indien geen identificatie gegeven is, dan wordt deze automatisch
     * gegenereerd.
     *
     * **DEPRECATED**: gebruik de contactmomenten API in plaats van deze endpoint.
     */
    post: operations["klantcontact_create"];
    parameters: {};
  };
  "/klantcontacten/{uuid}": {
    /**
     * Een specifiek KLANTCONTACT bij een ZAAK opvragen.
     *
     * **DEPRECATED**: gebruik de contactmomenten API in plaats van deze endpoint.
     */
    get: operations["klantcontact_read"];
    parameters: {
      path: {
        /** Unieke resource identifier (UUID4) */
        uuid: string;
      };
    };
  };
  "/resultaten": {
    /** Deze lijst kan gefilterd wordt met query-string parameters. */
    get: operations["resultaat_list"];
    /**
     * **Er wordt gevalideerd op**
     * - geldigheid URL naar de ZAAK
     * - geldigheid URL naar het RESULTAATTYPE
     */
    post: operations["resultaat_create"];
    parameters: {};
  };
  "/resultaten/{uuid}": {
    /** Een specifiek RESULTAAT opvragen. */
    get: operations["resultaat_read"];
    /**
     * **Er wordt gevalideerd op**
     * - geldigheid URL naar de ZAAK
     * - het RESULTAATTYPE mag niet gewijzigd worden
     */
    put: operations["resultaat_update"];
    /** Verwijder een RESULTAAT van een ZAAK. */
    delete: operations["resultaat_delete"];
    /** Vraag de headers op die je bij een GET request zou krijgen. */
    head: operations["resultaat_headers"];
    /**
     * **Er wordt gevalideerd op**
     * - geldigheid URL naar de ZAAK
     * - het RESULTAATTYPE mag niet gewijzigd worden
     */
    patch: operations["resultaat_partial_update"];
    parameters: {
      path: {
        /** Unieke resource identifier (UUID4) */
        uuid: string;
      };
    };
  };
  "/rollen": {
    /** Deze lijst kan gefilterd wordt met query-string parameters. */
    get: operations["rol_list"];
    /** Maak een ROL aan bij een ZAAK. */
    post: operations["rol_create"];
    parameters: {};
  };
  "/rollen/{uuid}": {
    /** Een specifieke ROL bij een ZAAK opvragen. */
    get: operations["rol_read"];
    /** Verwijder een ROL van een ZAAK. */
    delete: operations["rol_delete"];
    /** Vraag de headers op die je bij een GET request zou krijgen. */
    head: operations["rol_headers"];
    parameters: {
      path: {
        /** Unieke resource identifier (UUID4) */
        uuid: string;
      };
    };
  };
  "/statussen": {
    /** Deze lijst kan gefilterd wordt met query-string parameters. */
    get: operations["status_list"];
    /**
     * **Er wordt gevalideerd op**
     * - geldigheid URL naar de ZAAK
     * - geldigheid URL naar het STATUSTYPE
     * - indien het de eindstatus betreft, dan moet het attribuut
     *   `indicatieGebruiksrecht` gezet zijn op alle informatieobjecten die aan
     *   de zaak gerelateerd zijn
     *
     * **Opmerkingen**
     * - Indien het statustype de eindstatus is (volgens het ZTC), dan wordt de
     *   zaak afgesloten door de einddatum te zetten.
     */
    post: operations["status_create"];
    parameters: {};
  };
  "/statussen/{uuid}": {
    /** Een specifieke STATUS van een ZAAK opvragen. */
    get: operations["status_read"];
    /** Vraag de headers op die je bij een GET request zou krijgen. */
    head: operations["status_headers"];
    parameters: {
      path: {
        /** Unieke resource identifier (UUID4) */
        uuid: string;
      };
    };
  };
  "/zaakcontactmomenten": {
    /** Alle ZAAKCONTACTMOMENTen opvragen. */
    get: operations["zaakcontactmoment_list"];
    /**
     * **Er wordt gevalideerd op**
     * - geldigheid URL naar de CONTACTMOMENT
     */
    post: operations["zaakcontactmoment_create"];
    parameters: {};
  };
  "/zaakcontactmomenten/{uuid}": {
    /** Een specifiek ZAAKCONTACTMOMENT opvragen. */
    get: operations["zaakcontactmoment_read"];
    /** Verwijder een ZAAKCONTACTMOMENT. */
    delete: operations["zaakcontactmoment_delete"];
    parameters: {
      path: {
        /** Unieke resource identifier (UUID4) */
        uuid: string;
      };
    };
  };
  "/zaakinformatieobjecten": {
    /** Deze lijst kan gefilterd wordt met querystringparameters. */
    get: operations["zaakinformatieobject_list"];
    /**
     * Er worden twee types van
     * relaties met andere objecten gerealiseerd:
     *
     * **Er wordt gevalideerd op**
     * - geldigheid zaak URL
     * - geldigheid informatieobject URL
     * - de combinatie informatieobject en zaak moet uniek zijn
     *
     * **Opmerkingen**
     * - De registratiedatum wordt door het systeem op 'NU' gezet. De `aardRelatie`
     *   wordt ook door het systeem gezet.
     * - Bij het aanmaken wordt ook in de Documenten API de gespiegelde relatie aangemaakt,
     *   echter zonder de relatie-informatie.
     *
     * Registreer welk(e) INFORMATIEOBJECT(en) een ZAAK kent.
     *
     * **Er wordt gevalideerd op**
     * - geldigheid informatieobject URL
     * - uniek zijn van relatie ZAAK-INFORMATIEOBJECT
     */
    post: operations["zaakinformatieobject_create"];
    parameters: {};
  };
  "/zaakinformatieobjecten/{uuid}": {
    /** Een specifieke ZAAK-INFORMATIEOBJECT relatie opvragen. */
    get: operations["zaakinformatieobject_read"];
    /**
     * Je mag enkel de gegevens
     * van de relatie bewerken, en niet de relatie zelf aanpassen.
     *
     * **Er wordt gevalideerd op**
     * - informatieobject URL en zaak URL mogen niet veranderen
     */
    put: operations["zaakinformatieobject_update"];
    /**
     * De gespiegelde relatie in de Documenten API wordt door de Zaken API
     * verwijderd. Consumers kunnen dit niet handmatig doen..
     */
    delete: operations["zaakinformatieobject_delete"];
    /** Vraag de headers op die je bij een GET request zou krijgen. */
    head: operations["zaakinformatieobject_headers"];
    /**
     * Je mag enkel de gegevens
     * van de relatie bewerken, en niet de relatie zelf aanpassen.
     *
     * **Er wordt gevalideerd op**
     * - informatieobject URL en zaak URL mogen niet veranderen
     */
    patch: operations["zaakinformatieobject_partial_update"];
    parameters: {
      path: {
        /** Unieke resource identifier (UUID4) */
        uuid: string;
      };
    };
  };
  "/zaakobjecten": {
    /** Deze lijst kan gefilterd wordt met query-string parameters. */
    get: operations["zaakobject_list"];
    /** Maak een ZAAKOBJECT aan. */
    post: operations["zaakobject_create"];
    parameters: {};
  };
  "/zaakobjecten/{uuid}": {
    /** Een specifiek ZAAKOBJECT opvragen. */
    get: operations["zaakobject_read"];
    parameters: {
      path: {
        /** Unieke resource identifier (UUID4) */
        uuid: string;
      };
    };
  };
  "/zaakverzoeken": {
    /** Alle ZAAK-VERZOEK opvragen. */
    get: operations["zaakverzoek_list"];
    /**
     * **Er wordt gevalideerd op**
     * - geldigheid URL naar de VERZOEK
     */
    post: operations["zaakverzoek_create"];
    parameters: {};
  };
  "/zaakverzoeken/{uuid}": {
    /** Een specifiek ZAAK-VERZOEK opvragen. */
    get: operations["zaakverzoek_read"];
    /** Verwijder een ZAAK-VERZOEK. */
    delete: operations["zaakverzoek_delete"];
    parameters: {
      path: {
        /** Unieke resource identifier (UUID4) */
        uuid: string;
      };
    };
  };
  "/zaken": {
    /**
     * Deze lijst kan gefilterd wordt met query-string parameters.
     *
     * **Opmerking**
     * - er worden enkel zaken getoond van de zaaktypes waar u toe geautoriseerd
     *   bent.
     */
    get: operations["zaak_list"];
    /**
     * Indien geen identificatie gegeven is, dan wordt deze automatisch
     * gegenereerd. De identificatie moet uniek zijn binnen de bronorganisatie.
     *
     * **Er wordt gevalideerd op**:
     * - geldigheid `zaaktype` URL - de resource moet opgevraagd kunnen
     *   worden uit de Catalogi API en de vorm van een ZAAKTYPE hebben.
     * - `zaaktype` is geen concept (`zaaktype.concept` = False)
     * - `laatsteBetaaldatum` mag niet in de toekomst liggen.
     * - `laatsteBetaaldatum` mag niet gezet worden als de betalingsindicatie
     *   "nvt" is.
     * - `archiefnominatie` moet een waarde hebben indien `archiefstatus` niet de
     *   waarde "nog_te_archiveren" heeft.
     * - `archiefactiedatum` moet een waarde hebben indien `archiefstatus` niet de
     *   waarde "nog_te_archiveren" heeft.
     * - `archiefstatus` kan alleen een waarde anders dan "nog_te_archiveren"
     *   hebben indien van alle gerelateeerde INFORMATIEOBJECTen het attribuut
     *   `status` de waarde "gearchiveerd" heeft.
     */
    post: operations["zaak_create"];
    parameters: {};
  };
  "/zaken/_zoek": {
    /**
     * Zoeken/filteren gaat normaal via de `list` operatie, deze is echter
     * niet geschikt voor geo-zoekopdrachten.
     */
    post: operations["zaak__zoek"];
    parameters: {};
  };
  "/zaken/{uuid}": {
    /** Een specifieke ZAAK opvragen. */
    get: operations["zaak_read"];
    /**
     * **Er wordt gevalideerd op**
     * - `zaaktype` mag niet gewijzigd worden.
     * - `identificatie` mag niet gewijzigd worden.
     * - `laatsteBetaaldatum` mag niet in de toekomst liggen.
     * - `laatsteBetaaldatum` mag niet gezet worden als de betalingsindicatie
     *   "nvt" is.
     * - `archiefnominatie` moet een waarde hebben indien `archiefstatus` niet de
     *   waarde "nog_te_archiveren" heeft.
     * - `archiefactiedatum` moet een waarde hebben indien `archiefstatus` niet de
     *   waarde "nog_te_archiveren" heeft.
     * - `archiefstatus` kan alleen een waarde anders dan "nog_te_archiveren"
     *   hebben indien van alle gerelateeerde INFORMATIEOBJECTen het attribuut
     *   `status` de waarde "gearchiveerd" heeft.
     *
     * **Opmerkingen**
     * - er worden enkel zaken getoond van de zaaktypes waar u toe geautoriseerd
     *   bent.
     * - indien een zaak heropend moet worden, doe dit dan door een nieuwe status
     *   toe te voegen die NIET de eindstatus is.
     *   Zie de `Status` resource.
     */
    put: operations["zaak_update"];
    /**
     * **De gerelateerde resources zijn hierbij**
     * - `zaak` - de deelzaken van de verwijderde hoofzaak
     * - `status` - alle statussen van de verwijderde zaak
     * - `resultaat` - het resultaat van de verwijderde zaak
     * - `rol` - alle rollen bij de zaak
     * - `zaakobject` - alle zaakobjecten bij de zaak
     * - `zaakeigenschap` - alle eigenschappen van de zaak
     * - `zaakkenmerk` - alle kenmerken van de zaak
     * - `zaakinformatieobject` - dit moet door-cascaden naar de Documenten API,
     *   zie ook: https://github.com/VNG-Realisatie/gemma-zaken/issues/791 (TODO)
     * - `klantcontact` - alle klantcontacten bij een zaak
     */
    delete: operations["zaak_delete"];
    /** Vraag de headers op die je bij een GET request zou krijgen. */
    head: operations["zaak_headers"];
    /**
     * **Er wordt gevalideerd op**
     * - `zaaktype` mag niet gewijzigd worden.
     * - `identificatie` mag niet gewijzigd worden.
     * - `laatsteBetaaldatum` mag niet in de toekomst liggen.
     * - `laatsteBetaaldatum` mag niet gezet worden als de betalingsindicatie
     *   "nvt" is.
     * - `archiefnominatie` moet een waarde hebben indien `archiefstatus` niet de
     *   waarde "nog_te_archiveren" heeft.
     * - `archiefactiedatum` moet een waarde hebben indien `archiefstatus` niet de
     *   waarde "nog_te_archiveren" heeft.
     * - `archiefstatus` kan alleen een waarde anders dan "nog_te_archiveren"
     *   hebben indien van alle gerelateeerde INFORMATIEOBJECTen het attribuut
     *   `status` de waarde "gearchiveerd" heeft.
     *
     * **Opmerkingen**
     * - er worden enkel zaken getoond van de zaaktypes waar u toe geautoriseerd
     *   bent.
     * - indien een zaak heropend moet worden, doe dit dan door een nieuwe status
     *   toe te voegen die NIET de eindstatus is. Zie de `Status` resource.
     */
    patch: operations["zaak_partial_update"];
    parameters: {
      path: {
        /** Unieke resource identifier (UUID4) */
        uuid: string;
      };
    };
  };
  "/zaken/{zaak_uuid}/audittrail": {
    /** Alle audit trail regels behorend bij de ZAAK. */
    get: operations["audittrail_list"];
    parameters: {
      path: {
        /** Unieke resource identifier (UUID4) */
        zaak_uuid: string;
      };
    };
  };
  "/zaken/{zaak_uuid}/audittrail/{uuid}": {
    /** Een specifieke audit trail regel opvragen. */
    get: operations["audittrail_read"];
    parameters: {
      path: {
        /** Unieke identificatie van de audit regel. */
        uuid: string;
        /** Unieke resource identifier (UUID4) */
        zaak_uuid: string;
      };
    };
  };
  "/zaken/{zaak_uuid}/besluiten": {
    /** Alle ZAAKBESLUITen opvragen. */
    get: operations["zaakbesluit_list"];
    /**
     * **LET OP: Dit endpoint hoor je als consumer niet zelf aan te spreken.**
     *
     * De Besluiten API gebruikt dit endpoint om relaties te synchroniseren,
     * daarom is dit endpoint in de Zaken API geimplementeerd.
     *
     * **Er wordt gevalideerd op**
     * - geldigheid URL naar de ZAAK
     */
    post: operations["zaakbesluit_create"];
    parameters: {
      path: {
        /** Unieke resource identifier (UUID4) */
        zaak_uuid: string;
      };
    };
  };
  "/zaken/{zaak_uuid}/besluiten/{uuid}": {
    /** Een specifiek ZAAKBESLUIT opvragen. */
    get: operations["zaakbesluit_read"];
    /**
     * **LET OP: Dit endpoint hoor je als consumer niet zelf aan te spreken.**
     *
     * De Besluiten API gebruikt dit endpoint om relaties te synchroniseren,
     * daarom is dit endpoint in de Zaken API geimplementeerd.
     */
    delete: operations["zaakbesluit_delete"];
    parameters: {
      path: {
        /** Unieke resource identifier (UUID4) */
        uuid: string;
        /** Unieke resource identifier (UUID4) */
        zaak_uuid: string;
      };
    };
  };
  "/zaken/{zaak_uuid}/zaakeigenschappen": {
    /** Alle ZAAKEIGENSCHAPpen opvragen. */
    get: operations["zaakeigenschap_list"];
    /**
     * Maak een ZAAKEIGENSCHAP aan.
     *
     * **Er wordt gevalideerd op:**
     * - geldigheid `eigenschap` URL - de resource moet opgevraagd kunnen
     *   worden uit de Catalogi API en de vorm van een EIGENSCHAP hebben.
     * - de `eigenschap` moet bij het `ZAAK.zaaktype` horen
     */
    post: operations["zaakeigenschap_create"];
    parameters: {
      path: {
        /** Unieke resource identifier (UUID4) */
        zaak_uuid: string;
      };
    };
  };
  "/zaken/{zaak_uuid}/zaakeigenschappen/{uuid}": {
    /** Een specifieke ZAAKEIGENSCHAP opvragen. */
    get: operations["zaakeigenschap_read"];
    /** Vraag de headers op die je bij een GET request zou krijgen. */
    head: operations["zaakeigenschap_headers"];
    parameters: {
      path: {
        /** Unieke resource identifier (UUID4) */
        uuid: string;
        /** Unieke resource identifier (UUID4) */
        zaak_uuid: string;
      };
    };
  };
}

export interface components {
  schemas: {
    KlantContact: {
      /** URL-referentie naar dit object. Dit is de unieke identificatie en locatie van dit object. */
      url?: string;
      /** Unieke resource identifier (UUID4) */
      uuid?: string;
      /** URL-referentie naar de ZAAK. */
      zaak: string;
      /** De unieke aanduiding van een KLANTCONTACT */
      identificatie?: string;
      /** De datum en het tijdstip waarop het KLANTCONTACT begint */
      datumtijd: string;
      /** Het communicatiekanaal waarlangs het KLANTCONTACT gevoerd wordt */
      kanaal?: string;
      /** Het onderwerp waarover contact is geweest met de klant. */
      onderwerp?: string;
      /** Een toelichting die inhoudelijk het contact met de klant beschrijft. */
      toelichting?: string;
    };
    Fout: {
      /** URI referentie naar het type fout, bedoeld voor developers */
      type?: string;
      /** Systeemcode die het type fout aangeeft */
      code: string;
      /** Generieke titel voor het type fout */
      title: string;
      /** De HTTP status code */
      status: number;
      /** Extra informatie bij de fout, indien beschikbaar */
      detail: string;
      /** URI met referentie naar dit specifiek voorkomen van de fout. Deze kan gebruikt worden in combinatie met server logs, bijvoorbeeld. */
      instance: string;
    };
    FieldValidationError: {
      /** Naam van het veld met ongeldige gegevens */
      name: string;
      /** Systeemcode die het type fout aangeeft */
      code: string;
      /** Uitleg wat er precies fout is met de gegevens */
      reason: string;
    };
    ValidatieFout: {
      /** URI referentie naar het type fout, bedoeld voor developers */
      type?: string;
      /** Systeemcode die het type fout aangeeft */
      code: string;
      /** Generieke titel voor het type fout */
      title: string;
      /** De HTTP status code */
      status: number;
      /** Extra informatie bij de fout, indien beschikbaar */
      detail: string;
      /** URI met referentie naar dit specifiek voorkomen van de fout. Deze kan gebruikt worden in combinatie met server logs, bijvoorbeeld. */
      instance: string;
      invalidParams: components["schemas"]["FieldValidationError"][];
    };
    Resultaat: {
      /** URL-referentie naar dit object. Dit is de unieke identificatie en locatie van dit object. */
      url?: string;
      /** Unieke resource identifier (UUID4) */
      uuid?: string;
      /** URL-referentie naar de ZAAK. */
      zaak: string;
      /** URL-referentie naar het RESULTAATTYPE (in de Catalogi API). */
      resultaattype: string;
      /** Een toelichting op wat het resultaat van de zaak inhoudt. */
      toelichting?: string;
    };
    Rol: {
      /** URL-referentie naar dit object. Dit is de unieke identificatie en locatie van dit object. */
      url?: string;
      /** Unieke resource identifier (UUID4) */
      uuid?: string;
      /** URL-referentie naar de ZAAK. */
      zaak: string;
      /** URL-referentie naar een betrokkene gerelateerd aan de ZAAK. */
      betrokkene?: string;
      /**
       * Type van de `betrokkene`.
       *
       * Uitleg bij mogelijke waarden:
       *
       * * `natuurlijk_persoon` - Natuurlijk persoon
       * * `niet_natuurlijk_persoon` - Niet-natuurlijk persoon
       * * `vestiging` - Vestiging
       * * `organisatorische_eenheid` - Organisatorische eenheid
       * * `medewerker` - Medewerker
       */
      betrokkeneType:
        | "natuurlijk_persoon"
        | "niet_natuurlijk_persoon"
        | "vestiging"
        | "organisatorische_eenheid"
        | "medewerker";
      /** URL-referentie naar een roltype binnen het ZAAKTYPE van de ZAAK. */
      roltype: string;
      /** Omschrijving van de aard van de ROL, afgeleid uit het ROLTYPE. */
      omschrijving?: string;
      /**
       * Algemeen gehanteerde benaming van de aard van de ROL, afgeleid uit het ROLTYPE.
       *
       * Uitleg bij mogelijke waarden:
       *
       * * `adviseur` - (Adviseur) Kennis in dienst stellen van de behandeling van (een deel van) een zaak.
       * * `behandelaar` - (Behandelaar) De vakinhoudelijke behandeling doen van (een deel van) een zaak.
       * * `belanghebbende` - (Belanghebbende) Vanuit eigen en objectief belang rechtstreeks betrokken zijn bij de behandeling en/of de uitkomst van een zaak.
       * * `beslisser` - (Beslisser) Nemen van besluiten die voor de uitkomst van een zaak noodzakelijk zijn.
       * * `initiator` - (Initiator) Aanleiding geven tot de start van een zaak ..
       * * `klantcontacter` - (Klantcontacter) Het eerste aanspreekpunt zijn voor vragen van burgers en bedrijven ..
       * * `zaakcoordinator` - (Zaakcoördinator) Er voor zorg dragen dat de behandeling van de zaak in samenhang uitgevoerd wordt conform de daarover gemaakte afspraken.
       * * `mede_initiator` - Mede-initiator
       */
      omschrijvingGeneriek?: string;
      roltoelichting: string;
      /** De datum waarop dit object is geregistreerd. */
      registratiedatum?: string;
      /**
       * Indicatie machtiging
       *
       * Uitleg bij mogelijke waarden:
       *
       * * `gemachtigde` - De betrokkene in de rol bij de zaak is door een andere betrokkene bij dezelfde zaak gemachtigd om namens hem of haar te handelen
       * * `machtiginggever` - De betrokkene in de rol bij de zaak heeft een andere betrokkene bij dezelfde zaak gemachtigd om namens hem of haar te handelen
       */
      indicatieMachtiging?: "gemachtigde" | "machtiginggever";
    };
    VerblijfsAdres: {
      /** De unieke identificatie van het OBJECT */
      aoaIdentificatie: string;
      wplWoonplaatsNaam: string;
      /** Een door het bevoegde gemeentelijke orgaan aan een OPENBARE RUIMTE toegekende benaming */
      gorOpenbareRuimteNaam: string;
      aoaPostcode?: string;
      aoaHuisnummer: number;
      aoaHuisletter?: string;
      aoaHuisnummertoevoeging?: string;
      inpLocatiebeschrijving?: string;
    };
    SubVerblijfBuitenland: {
      /** De code, behorende bij de landnaam, zoals opgenomen in de Land/Gebied-tabel van de BRP. */
      lndLandcode: string;
      /** De naam van het land, zoals opgenomen in de Land/Gebied-tabel van de BRP. */
      lndLandnaam: string;
      subAdresBuitenland_1?: string;
      subAdresBuitenland_2?: string;
      subAdresBuitenland_3?: string;
    };
    RolNatuurlijkPersoon: {
      /** Het burgerservicenummer, bedoeld in artikel 1.1 van de Wet algemene bepalingen burgerservicenummer. */
      inpBsn?: string;
      /** Het door de gemeente uitgegeven unieke nummer voor een ANDER NATUURLIJK PERSOON */
      anpIdentificatie?: string;
      /** Het administratienummer van de persoon, bedoeld in de Wet BRP */
      inpA_nummer?: string;
      /** De stam van de geslachtsnaam. */
      geslachtsnaam?: string;
      voorvoegselGeslachtsnaam?: string;
      /** De verzameling letters die gevormd wordt door de eerste letter van alle in volgorde voorkomende voornamen. */
      voorletters?: string;
      /** Voornamen bij de naam die de persoon wenst te voeren. */
      voornamen?: string;
      /**
       * Een aanduiding die aangeeft of de persoon een man of een vrouw is, of dat het geslacht nog onbekend is.
       *
       * Uitleg bij mogelijke waarden:
       *
       * * `m` - Man
       * * `v` - Vrouw
       * * `o` - Onbekend
       */
      geslachtsaanduiding?: "m" | "v" | "o";
      geboortedatum?: string;
      verblijfsadres?: components["schemas"]["VerblijfsAdres"];
      subVerblijfBuitenland?: components["schemas"]["SubVerblijfBuitenland"];
    };
    betrokkene_identificatie_RolNatuurlijkPersoon: {
      betrokkeneIdentificatie?: components["schemas"]["RolNatuurlijkPersoon"];
    };
    natuurlijk_persoon: components["schemas"]["Rol"] &
      components["schemas"]["betrokkene_identificatie_RolNatuurlijkPersoon"];
    RolNietNatuurlijkPersoon: {
      /** Het door een kamer toegekend uniek nummer voor de INGESCHREVEN NIET-NATUURLIJK PERSOON */
      innNnpId?: string;
      /** Het door de gemeente uitgegeven unieke nummer voor een ANDER NIET-NATUURLIJK PERSOON */
      annIdentificatie?: string;
      /** Naam van de niet-natuurlijke persoon zoals deze is vastgelegd in de statuten (rechtspersoon) of in de vennootschapsovereenkomst is overeengekomen (Vennootschap onder firma of Commanditaire vennootschap). */
      statutaireNaam?: string;
      /** De juridische vorm van de NIET-NATUURLIJK PERSOON. */
      innRechtsvorm?:
        | "besloten_vennootschap"
        | "cooperatie_europees_economische_samenwerking"
        | "europese_cooperatieve_venootschap"
        | "europese_naamloze_vennootschap"
        | "kerkelijke_organisatie"
        | "naamloze_vennootschap"
        | "onderlinge_waarborg_maatschappij"
        | "overig_privaatrechtelijke_rechtspersoon"
        | "stichting"
        | "vereniging"
        | "vereniging_van_eigenaars"
        | "publiekrechtelijke_rechtspersoon"
        | "vennootschap_onder_firma"
        | "maatschap"
        | "rederij"
        | "commanditaire_vennootschap"
        | "kapitaalvennootschap_binnen_eer"
        | "overige_buitenlandse_rechtspersoon_vennootschap"
        | "kapitaalvennootschap_buiten_eer";
      /** De gegevens over het adres van de NIET-NATUURLIJK PERSOON */
      bezoekadres?: string;
      subVerblijfBuitenland?: components["schemas"]["SubVerblijfBuitenland"];
    };
    betrokkene_identificatie_RolNietNatuurlijkPersoon: {
      betrokkeneIdentificatie?: components["schemas"]["RolNietNatuurlijkPersoon"];
    };
    niet_natuurlijk_persoon: components["schemas"]["Rol"] &
      components["schemas"]["betrokkene_identificatie_RolNietNatuurlijkPersoon"];
    RolVestiging: {
      /** Een korte unieke aanduiding van de Vestiging. */
      vestigingsNummer?: string;
      /** De naam van de vestiging waaronder gehandeld wordt. */
      handelsnaam?: string[];
      verblijfsadres?: components["schemas"]["VerblijfsAdres"];
      subVerblijfBuitenland?: components["schemas"]["SubVerblijfBuitenland"];
    };
    betrokkene_identificatie_RolVestiging: {
      betrokkeneIdentificatie?: components["schemas"]["RolVestiging"];
    };
    vestiging: components["schemas"]["Rol"] &
      components["schemas"]["betrokkene_identificatie_RolVestiging"];
    RolOrganisatorischeEenheid: {
      /** Een korte identificatie van de organisatorische eenheid. */
      identificatie?: string;
      /** De feitelijke naam van de organisatorische eenheid. */
      naam?: string;
      isGehuisvestIn?: string;
    };
    betrokkene_identificatie_RolOrganisatorischeEenheid: {
      betrokkeneIdentificatie?: components["schemas"]["RolOrganisatorischeEenheid"];
    };
    organisatorische_eenheid: components["schemas"]["Rol"] &
      components["schemas"]["betrokkene_identificatie_RolOrganisatorischeEenheid"];
    RolMedewerker: {
      /** Een korte unieke aanduiding van de MEDEWERKER. */
      identificatie?: string;
      /** De achternaam zoals de MEDEWERKER die in het dagelijkse verkeer gebruikt. */
      achternaam?: string;
      /** De verzameling letters die gevormd wordt door de eerste letter van alle in volgorde voorkomende voornamen. */
      voorletters?: string;
      /** Dat deel van de geslachtsnaam dat voorkomt in Tabel 36 (GBA), voorvoegseltabel, en door een spatie van de geslachtsnaam is */
      voorvoegselAchternaam?: string;
    };
    betrokkene_identificatie_RolMedewerker: {
      betrokkeneIdentificatie?: components["schemas"]["RolMedewerker"];
    };
    medewerker: components["schemas"]["Rol"] &
      components["schemas"]["betrokkene_identificatie_RolMedewerker"];
    Status: {
      /** URL-referentie naar dit object. Dit is de unieke identificatie en locatie van dit object. */
      url?: string;
      /** Unieke resource identifier (UUID4) */
      uuid?: string;
      /** URL-referentie naar de ZAAK. */
      zaak: string;
      /** URL-referentie naar het STATUSTYPE (in de Catalogi API). */
      statustype: string;
      /** De datum waarop de ZAAK de status heeft verkregen. */
      datumStatusGezet: string;
      /** Een, voor de initiator van de zaak relevante, toelichting op de status van een zaak. */
      statustoelichting?: string;
    };
    ZaakContactMoment: {
      /** URL-referentie naar dit object. Dit is de unieke identificatie en locatie van dit object. */
      url?: string;
      /** Unieke resource identifier (UUID4) */
      uuid?: string;
      /** URL-referentie naar de ZAAK. */
      zaak: string;
      /** URL-referentie naar het CONTACTMOMENT (in de Klantinteractie API) */
      contactmoment: string;
    };
    ZaakInformatieObject: {
      /** URL-referentie naar dit object. Dit is de unieke identificatie en locatie van dit object. */
      url?: string;
      /** Unieke resource identifier (UUID4) */
      uuid?: string;
      /** URL-referentie naar het INFORMATIEOBJECT (in de Documenten API), waar ook de relatieinformatie opgevraagd kan worden. */
      informatieobject: string;
      /** URL-referentie naar de ZAAK. */
      zaak: string;
      aardRelatieWeergave?:
        | "Hoort bij, omgekeerd: kent"
        | "Legt vast, omgekeerd: kan vastgelegd zijn als";
      /** De naam waaronder het INFORMATIEOBJECT binnen het OBJECT bekend is. */
      titel?: string;
      /** Een op het object gerichte beschrijving van de inhoud vanhet INFORMATIEOBJECT. */
      beschrijving?: string;
      /** De datum waarop de behandelende organisatie het INFORMATIEOBJECT heeft geregistreerd bij het OBJECT. Geldige waardes zijn datumtijden gelegen op of voor de huidige datum en tijd. */
      registratiedatum?: string;
    };
    ZaakObject: {
      /** URL-referentie naar dit object. Dit is de unieke identificatie en locatie van dit object. */
      url?: string;
      /** Unieke resource identifier (UUID4) */
      uuid?: string;
      /** URL-referentie naar de ZAAK. */
      zaak: string;
      /** URL-referentie naar de resource die het OBJECT beschrijft. */
      object?: string;
      /**
       * Beschrijft het type OBJECT gerelateerd aan de ZAAK. Als er geen passend type is, dan moet het type worden opgegeven onder `objectTypeOverige`.
       *
       * Uitleg bij mogelijke waarden:
       *
       * * `adres` - Adres
       * * `besluit` - Besluit
       * * `buurt` - Buurt
       * * `enkelvoudig_document` - Enkelvoudig document
       * * `gemeente` - Gemeente
       * * `gemeentelijke_openbare_ruimte` - Gemeentelijke openbare ruimte
       * * `huishouden` - Huishouden
       * * `inrichtingselement` - Inrichtingselement
       * * `kadastrale_onroerende_zaak` - Kadastrale onroerende zaak
       * * `kunstwerkdeel` - Kunstwerkdeel
       * * `maatschappelijke_activiteit` - Maatschappelijke activiteit
       * * `medewerker` - Medewerker
       * * `natuurlijk_persoon` - Natuurlijk persoon
       * * `niet_natuurlijk_persoon` - Niet-natuurlijk persoon
       * * `openbare_ruimte` - Openbare ruimte
       * * `organisatorische_eenheid` - Organisatorische eenheid
       * * `pand` - Pand
       * * `spoorbaandeel` - Spoorbaandeel
       * * `status` - Status
       * * `terreindeel` - Terreindeel
       * * `terrein_gebouwd_object` - Terrein gebouwd object
       * * `vestiging` - Vestiging
       * * `waterdeel` - Waterdeel
       * * `wegdeel` - Wegdeel
       * * `wijk` - Wijk
       * * `woonplaats` - Woonplaats
       * * `woz_deelobject` - Woz deel object
       * * `woz_object` - Woz object
       * * `woz_waarde` - Woz waarde
       * * `zakelijk_recht` - Zakelijk recht
       * * `overige` - Overige
       */
      objectType:
        | "adres"
        | "besluit"
        | "buurt"
        | "enkelvoudig_document"
        | "gemeente"
        | "gemeentelijke_openbare_ruimte"
        | "huishouden"
        | "inrichtingselement"
        | "kadastrale_onroerende_zaak"
        | "kunstwerkdeel"
        | "maatschappelijke_activiteit"
        | "medewerker"
        | "natuurlijk_persoon"
        | "niet_natuurlijk_persoon"
        | "openbare_ruimte"
        | "organisatorische_eenheid"
        | "pand"
        | "spoorbaandeel"
        | "status"
        | "terreindeel"
        | "terrein_gebouwd_object"
        | "vestiging"
        | "waterdeel"
        | "wegdeel"
        | "wijk"
        | "woonplaats"
        | "woz_deelobject"
        | "woz_object"
        | "woz_waarde"
        | "zakelijk_recht"
        | "overige";
      /** Beschrijft het type OBJECT als `objectType` de waarde "overige" heeft. */
      objectTypeOverige?: string;
      /** Omschrijving van de betrekking tussen de ZAAK en het OBJECT. */
      relatieomschrijving?: string;
    };
    ObjectAdres: {
      /** De unieke identificatie van het OBJECT */
      identificatie: string;
      wplWoonplaatsNaam: string;
      /** Een door het bevoegde gemeentelijke orgaan aan een OPENBARE RUIMTE toegekende benaming */
      gorOpenbareRuimteNaam: string;
      huisnummer: number;
      huisletter?: string;
      huisnummertoevoeging?: string;
      postcode?: string;
    };
    object_identificatie_ObjectAdres: {
      objectIdentificatie?: components["schemas"]["ObjectAdres"];
    };
    adres: components["schemas"]["ZaakObject"] &
      components["schemas"]["object_identificatie_ObjectAdres"];
    besluit: components["schemas"]["ZaakObject"];
    ObjectBuurt: {
      /** De code behorende bij de naam van de buurt */
      buurtCode: string;
      /** De naam van de buurt, zoals die door het CBS wordt gebruikt. */
      buurtNaam: string;
      /** Een numerieke aanduiding waarmee een Nederlandse gemeente uniek wordt aangeduid */
      gemGemeenteCode: string;
      /** De code behorende bij de naam van de wijk */
      wykWijkCode: string;
    };
    object_identificatie_ObjectBuurt: {
      objectIdentificatie?: components["schemas"]["ObjectBuurt"];
    };
    buurt: components["schemas"]["ZaakObject"] &
      components["schemas"]["object_identificatie_ObjectBuurt"];
    enkelvoudig_document: components["schemas"]["ZaakObject"];
    ObjectGemeente: {
      /** De officiële door de gemeente vastgestelde gemeentenaam. */
      gemeenteNaam: string;
      /** Een numerieke aanduiding waarmee een Nederlandse gemeente uniek wordt aangeduid */
      gemeenteCode: string;
    };
    object_identificatie_ObjectGemeente: {
      objectIdentificatie?: components["schemas"]["ObjectGemeente"];
    };
    gemeente: components["schemas"]["ZaakObject"] &
      components["schemas"]["object_identificatie_ObjectGemeente"];
    ObjectGemeentelijkeOpenbareRuimte: {
      /** De unieke identificatie van het OBJECT */
      identificatie: string;
      /** Een door het bevoegde gemeentelijke orgaan aan een OPENBARE RUIMTE toegekende benaming */
      openbareRuimteNaam: string;
    };
    object_identificatie_ObjectGemeentelijkeOpenbareRuimte: {
      objectIdentificatie?: components["schemas"]["ObjectGemeentelijkeOpenbareRuimte"];
    };
    gemeentelijke_openbare_ruimte: components["schemas"]["ZaakObject"] &
      components["schemas"]["object_identificatie_ObjectGemeentelijkeOpenbareRuimte"];
    TerreinGebouwdObjectAdres: {
      numIdentificatie?: string;
      /** De unieke identificatie van het OBJECT */
      oaoIdentificatie: string;
      wplWoonplaatsNaam: string;
      /** Een door het bevoegde gemeentelijke orgaan aan een OPENBARE RUIMTE toegekende benaming */
      gorOpenbareRuimteNaam: string;
      aoaPostcode?: string;
      aoaHuisnummer: number;
      aoaHuisletter?: string;
      aoaHuisnummertoevoeging?: string;
      ogoLocatieAanduiding?: string;
    };
    ObjectTerreinGebouwdObject: {
      /** De unieke identificatie van het OBJECT */
      identificatie: string;
      adresAanduidingGrp?: components["schemas"]["TerreinGebouwdObjectAdres"];
    };
    ObjectHuishouden: {
      /** Uniek identificerend administratienummer van een huishouden zoals toegekend door de gemeente waarin het huishouden woonachtig is. */
      nummer: string;
      isGehuisvestIn?: components["schemas"]["ObjectTerreinGebouwdObject"];
    };
    object_identificatie_ObjectHuishouden: {
      objectIdentificatie?: components["schemas"]["ObjectHuishouden"];
    };
    huishouden: components["schemas"]["ZaakObject"] &
      components["schemas"]["object_identificatie_ObjectHuishouden"];
    ObjectInrichtingselement: {
      /**
       * Specificatie van de aard van het inrichtingselement.
       *
       * Uitleg bij mogelijke waarden:
       *
       * * `bak` - Bak
       * * `bord` - Bord
       * * `installatie` - Installatie
       * * `kast` - Kast
       * * `mast` - Mast
       * * `paal` - Paal
       * * `sensor` - Sensor
       * * `straatmeubilair` - Straatmeubilair
       * * `waterinrichtingselement` - Waterinrichtingselement
       * * `weginrichtingselement` - Weginrichtingselement
       */
      type:
        | "bak"
        | "bord"
        | "installatie"
        | "kast"
        | "mast"
        | "paal"
        | "sensor"
        | "straatmeubilair"
        | "waterinrichtingselement"
        | "weginrichtingselement";
      /** De unieke identificatie van het OBJECT */
      identificatie: string;
      /** De benaming van het OBJECT */
      naam?: string;
    };
    object_identificatie_ObjectInrichtingselement: {
      objectIdentificatie?: components["schemas"]["ObjectInrichtingselement"];
    };
    inrichtingselement: components["schemas"]["ZaakObject"] &
      components["schemas"]["object_identificatie_ObjectInrichtingselement"];
    ObjectKadastraleOnroerendeZaak: {
      /** De unieke identificatie van het OBJECT */
      kadastraleIdentificatie: string;
      /** De typering van de kadastrale aanduiding van een onroerende zaak conform Kadaster */
      kadastraleAanduiding: string;
    };
    object_identificatie_ObjectKadastraleOnroerendeZaak: {
      objectIdentificatie?: components["schemas"]["ObjectKadastraleOnroerendeZaak"];
    };
    kadastrale_onroerende_zaak: components["schemas"]["ZaakObject"] &
      components["schemas"]["object_identificatie_ObjectKadastraleOnroerendeZaak"];
    ObjectKunstwerkdeel: {
      /**
       * Specificatie van het soort Kunstwerk waartoe het kunstwerkdeel behoort.
       *
       * Uitleg bij mogelijke waarden:
       *
       * * `keermuur` - Keermuur
       * * `overkluizing` - Overkluizing
       * * `duiker` - Duiker
       * * `faunavoorziening` - Faunavoorziening
       * * `vispassage` - Vispassage
       * * `bodemval` - Bodemval
       * * `coupure` - Coupure
       * * `ponton` - Ponton
       * * `voorde` - Voorde
       * * `hoogspanningsmast` - Hoogspanningsmast
       * * `gemaal` - Gemaal
       * * `perron` - Perron
       * * `sluis` - Sluis
       * * `strekdam` - Strekdam
       * * `steiger` - Steiger
       * * `stuw` - Stuw
       */
      type:
        | "keermuur"
        | "overkluizing"
        | "duiker"
        | "faunavoorziening"
        | "vispassage"
        | "bodemval"
        | "coupure"
        | "ponton"
        | "voorde"
        | "hoogspanningsmast"
        | "gemaal"
        | "perron"
        | "sluis"
        | "strekdam"
        | "steiger"
        | "stuw";
      /** De unieke identificatie van het OBJECT */
      identificatie: string;
      naam: string;
    };
    object_identificatie_ObjectKunstwerkdeel: {
      objectIdentificatie?: components["schemas"]["ObjectKunstwerkdeel"];
    };
    kunstwerkdeel: components["schemas"]["ZaakObject"] &
      components["schemas"]["object_identificatie_ObjectKunstwerkdeel"];
    ObjectMaatschappelijkeActiviteit: {
      /** Landelijk uniek identificerend administratienummer van een MAATSCHAPPELIJKE ACTIVITEIT zoals toegewezen door de Kamer van Koophandel (KvK). */
      kvkNummer: string;
      /** De naam waaronder de onderneming handelt. */
      handelsnaam: string;
    };
    object_identificatie_ObjectMaatschappelijkeActiviteit: {
      objectIdentificatie?: components["schemas"]["ObjectMaatschappelijkeActiviteit"];
    };
    maatschappelijke_activiteit: components["schemas"]["ZaakObject"] &
      components["schemas"]["object_identificatie_ObjectMaatschappelijkeActiviteit"];
    object_identificatie_RolMedewerker: {
      objectIdentificatie?: components["schemas"]["RolMedewerker"];
    };
    object_identificatie_RolNatuurlijkPersoon: {
      objectIdentificatie?: components["schemas"]["RolNatuurlijkPersoon"];
    };
    object_identificatie_RolNietNatuurlijkPersoon: {
      objectIdentificatie?: components["schemas"]["RolNietNatuurlijkPersoon"];
    };
    ObjectOpenbareRuimte: {
      /** De unieke identificatie van het OBJECT */
      identificatie: string;
      wplWoonplaatsNaam: string;
      /** Een door het bevoegde gemeentelijke orgaan aan een OPENBARE RUIMTE toegekende benaming */
      gorOpenbareRuimteNaam: string;
    };
    object_identificatie_ObjectOpenbareRuimte: {
      objectIdentificatie?: components["schemas"]["ObjectOpenbareRuimte"];
    };
    openbare_ruimte: components["schemas"]["ZaakObject"] &
      components["schemas"]["object_identificatie_ObjectOpenbareRuimte"];
    object_identificatie_RolOrganisatorischeEenheid: {
      objectIdentificatie?: components["schemas"]["RolOrganisatorischeEenheid"];
    };
    ObjectPand: {
      /** De unieke identificatie van het OBJECT */
      identificatie: string;
    };
    object_identificatie_ObjectPand: {
      objectIdentificatie?: components["schemas"]["ObjectPand"];
    };
    pand: components["schemas"]["ZaakObject"] &
      components["schemas"]["object_identificatie_ObjectPand"];
    ObjectSpoorbaandeel: {
      /**
       * Specificatie van het soort Spoorbaan
       *
       * Uitleg bij mogelijke waarden:
       *
       * * `breedspoor` - breedspoor
       * * `normaalspoor` - normaalspoor
       * * `smalspoor` - smalspoor
       * * `spoorbaan` - spoorbaan
       */
      type: "breedspoor" | "normaalspoor" | "smalspoor" | "spoorbaan";
      /** De unieke identificatie van het OBJECT */
      identificatie: string;
      /** De benaming van het OBJECT */
      naam?: string;
    };
    object_identificatie_ObjectSpoorbaandeel: {
      objectIdentificatie?: components["schemas"]["ObjectSpoorbaandeel"];
    };
    spoorbaandeel: components["schemas"]["ZaakObject"] &
      components["schemas"]["object_identificatie_ObjectSpoorbaandeel"];
    status: components["schemas"]["ZaakObject"];
    ObjectTerreindeel: {
      type: string;
      /** De unieke identificatie van het OBJECT */
      identificatie: string;
      /** De benaming van het OBJECT */
      naam?: string;
    };
    object_identificatie_ObjectTerreindeel: {
      objectIdentificatie?: components["schemas"]["ObjectTerreindeel"];
    };
    terreindeel: components["schemas"]["ZaakObject"] &
      components["schemas"]["object_identificatie_ObjectTerreindeel"];
    object_identificatie_ObjectTerreinGebouwdObject: {
      objectIdentificatie?: components["schemas"]["ObjectTerreinGebouwdObject"];
    };
    terrein_gebouwd_object: components["schemas"]["ZaakObject"] &
      components["schemas"]["object_identificatie_ObjectTerreinGebouwdObject"];
    object_identificatie_RolVestiging: {
      objectIdentificatie?: components["schemas"]["RolVestiging"];
    };
    ObjectWaterdeel: {
      /**
       * Specificatie van het soort water
       *
       * Uitleg bij mogelijke waarden:
       *
       * * `zee` - Zee
       * * `waterloop` - Waterloop
       * * `watervlakte` - Watervlakte
       * * `greppel_droge_sloot` - Greppel, droge sloot
       */
      typeWaterdeel:
        | "zee"
        | "waterloop"
        | "watervlakte"
        | "greppel_droge_sloot";
      /** De unieke identificatie van het OBJECT */
      identificatie: string;
      /** De benaming van het OBJECT */
      naam?: string;
    };
    object_identificatie_ObjectWaterdeel: {
      objectIdentificatie?: components["schemas"]["ObjectWaterdeel"];
    };
    waterdeel: components["schemas"]["ZaakObject"] &
      components["schemas"]["object_identificatie_ObjectWaterdeel"];
    ObjectWegdeel: {
      type: string;
      /** De unieke identificatie van het OBJECT */
      identificatie: string;
      /** De benaming van het OBJECT */
      naam?: string;
    };
    object_identificatie_ObjectWegdeel: {
      objectIdentificatie?: components["schemas"]["ObjectWegdeel"];
    };
    wegdeel: components["schemas"]["ZaakObject"] &
      components["schemas"]["object_identificatie_ObjectWegdeel"];
    ObjectWijk: {
      /** De code behorende bij de naam van de wijk. */
      wijkCode: string;
      /** De naam van de wijk, zoals die door het CBS wordt gebruikt. */
      wijkNaam: string;
      /** Een numerieke aanduiding waarmee een Nederlandse gemeente uniek wordt aangeduid */
      gemGemeenteCode: string;
    };
    object_identificatie_ObjectWijk: {
      objectIdentificatie?: components["schemas"]["ObjectWijk"];
    };
    wijk: components["schemas"]["ZaakObject"] &
      components["schemas"]["object_identificatie_ObjectWijk"];
    ObjectWoonplaats: {
      /** De unieke identificatie van het OBJECT */
      identificatie: string;
      /** De door het bevoegde gemeentelijke orgaan aan een WOONPLAATS toegekende benaming. */
      woonplaatsNaam: string;
    };
    object_identificatie_ObjectWoonplaats: {
      objectIdentificatie?: components["schemas"]["ObjectWoonplaats"];
    };
    woonplaats: components["schemas"]["ZaakObject"] &
      components["schemas"]["object_identificatie_ObjectWoonplaats"];
    WozObjectAdres: {
      /** De unieke identificatie van het OBJECT */
      aoaIdentificatie: string;
      wplWoonplaatsNaam: string;
      /** Een door het bevoegde gemeentelijke orgaan aan een OPENBARE RUIMTE toegekende benaming */
      gorOpenbareRuimteNaam: string;
      aoaPostcode?: string;
      aoaHuisnummer: number;
      aoaHuisletter?: string;
      aoaHuisnummertoevoeging?: string;
      locatieOmschrijving?: string;
    };
    ObjectWozObject: {
      /** De unieke identificatie van het OBJECT */
      wozObjectNummer: string;
      aanduidingWozObject?: components["schemas"]["WozObjectAdres"];
    };
    ObjectWozDeelobject: {
      /** Uniek identificatienummer voor het deelobject binnen een WOZ-object. */
      nummerWozDeelObject: string;
      isOnderdeelVan?: components["schemas"]["ObjectWozObject"];
    };
    object_identificatie_ObjectWozDeelobject: {
      objectIdentificatie?: components["schemas"]["ObjectWozDeelobject"];
    };
    woz_deelobject: components["schemas"]["ZaakObject"] &
      components["schemas"]["object_identificatie_ObjectWozDeelobject"];
    object_identificatie_ObjectWozObject: {
      objectIdentificatie?: components["schemas"]["ObjectWozObject"];
    };
    woz_object: components["schemas"]["ZaakObject"] &
      components["schemas"]["object_identificatie_ObjectWozObject"];
    ObjectWozWaarde: {
      /** De datum waarnaar de waarde van het WOZ-object wordt bepaald. */
      waardepeildatum: string;
      isVoor?: components["schemas"]["ObjectWozObject"];
    };
    object_identificatie_ObjectWozWaarde: {
      objectIdentificatie?: components["schemas"]["ObjectWozWaarde"];
    };
    woz_waarde: components["schemas"]["ZaakObject"] &
      components["schemas"]["object_identificatie_ObjectWozWaarde"];
    ZakelijkRechtHeeftAlsGerechtigde: {
      natuurlijkPersoon?: components["schemas"]["RolNatuurlijkPersoon"];
      nietNatuurlijkPersoon?: components["schemas"]["RolNietNatuurlijkPersoon"];
    };
    ObjectZakelijkRecht: {
      /** De unieke identificatie van het OBJECT */
      identificatie: string;
      /** aanduiding voor de aard van het recht */
      avgAard: string;
      heeftBetrekkingOp?: components["schemas"]["ObjectKadastraleOnroerendeZaak"];
      heeftAlsGerechtigde?: components["schemas"]["ZakelijkRechtHeeftAlsGerechtigde"];
    };
    object_identificatie_ObjectZakelijkRecht: {
      objectIdentificatie?: components["schemas"]["ObjectZakelijkRecht"];
    };
    zakelijk_recht: components["schemas"]["ZaakObject"] &
      components["schemas"]["object_identificatie_ObjectZakelijkRecht"];
    ObjectOverige: {
      overigeData: { [key: string]: any };
    };
    object_identificatie_ObjectOverige: {
      objectIdentificatie?: components["schemas"]["ObjectOverige"];
    };
    overige: components["schemas"]["ZaakObject"] &
      components["schemas"]["object_identificatie_ObjectOverige"];
    ZaakVerzoek: {
      /** URL-referentie naar dit object. Dit is de unieke identificatie en locatie van dit object. */
      url?: string;
      /** Unieke resource identifier (UUID4) */
      uuid?: string;
      /** URL-referentie naar de ZAAK. */
      zaak: string;
      /** URL-referentie naar het VERZOEK (in de Klantinteractie API) */
      verzoek: string;
    };
    /** GeoJSON geometry */
    Geometry: {
      /** The geometry type */
      type:
        | "Point"
        | "MultiPoint"
        | "LineString"
        | "MultiLineString"
        | "Polygon"
        | "MultiPolygon"
        | "Feature"
        | "FeatureCollection"
        | "GeometryCollection";
    };
    /** A 2D point */
    Point2D: number[];
    /** GeoJSON point geometry */
    Point: components["schemas"]["Geometry"] & {
      coordinates: components["schemas"]["Point2D"];
    };
    /** GeoJSON multi-point geometry */
    MultiPoint: components["schemas"]["Geometry"] & {
      coordinates: components["schemas"]["Point2D"][];
    };
    /** GeoJSON line-string geometry */
    LineString: components["schemas"]["Geometry"] & {
      coordinates: components["schemas"]["Point2D"][];
    };
    /** GeoJSON multi-line-string geometry */
    MultiLineString: components["schemas"]["Geometry"] & {
      coordinates: components["schemas"]["Point2D"][][];
    };
    /** GeoJSON polygon geometry */
    Polygon: components["schemas"]["Geometry"] & {
      coordinates: components["schemas"]["Point2D"][][];
    };
    /** GeoJSON multi-polygon geometry */
    MultiPolygon: components["schemas"]["Geometry"] & {
      coordinates: components["schemas"]["Point2D"][][][];
    };
    /** GeoJSON multi-polygon geometry */
    GeometryCollection: components["schemas"]["Geometry"] & {
      geometries: components["schemas"]["Geometry"][];
    };
    GeoJSONGeometry:
      | components["schemas"]["Point"]
      | components["schemas"]["MultiPoint"]
      | components["schemas"]["LineString"]
      | components["schemas"]["MultiLineString"]
      | components["schemas"]["Polygon"]
      | components["schemas"]["MultiPolygon"]
      | components["schemas"]["GeometryCollection"];
    /** Gegevens omtrent het verlengen van de doorlooptijd van de behandeling van de ZAAK */
    Verlenging: {
      /** Omschrijving van de reden voor het verlengen van de behandeling van de zaak. */
      reden: string;
      /** Het aantal werkbare dagen waarmee de doorlooptijd van de behandeling van de ZAAK is verlengd (of verkort) ten opzichte van de eerder gecommuniceerde doorlooptijd. */
      duur: string;
    } | null;
    /** Gegevens omtrent het tijdelijk opschorten van de behandeling van de ZAAK */
    Opschorting: {
      /** Aanduiding of de behandeling van de ZAAK tijdelijk is opgeschort. */
      indicatie: boolean;
      /** Omschrijving van de reden voor het opschorten van de behandeling van de zaak. */
      reden: string;
    } | null;
    /** Een lijst van relevante andere zaken. */
    RelevanteZaak: {
      url: string;
      /**
       * Benamingen van de aard van de relaties van andere zaken tot (onderhanden) zaken.
       *
       * Uitleg bij mogelijke waarden:
       *
       * * `vervolg` - De andere zaak gaf aanleiding tot het starten van de onderhanden zaak.
       * * `onderwerp` - De andere zaak is relevant voor cq. is onderwerp van de onderhanden zaak.
       * * `bijdrage` - Aan het bereiken van de uitkomst van de andere zaak levert de onderhanden zaak een bijdrage.
       */
      aardRelatie: "vervolg" | "onderwerp" | "bijdrage";
    };
    /** Lijst van kenmerken. Merk op dat refereren naar gerelateerde objecten beter kan via `ZaakObject`. */
    ZaakKenmerk: {
      /** Identificeert uniek de zaak in een andere administratie. */
      kenmerk: string;
      /** De aanduiding van de administratie waar het kenmerk op slaat. */
      bron: string;
    };
    Zaak: {
      /** URL-referentie naar dit object. Dit is de unieke identificatie en locatie van dit object. */
      url?: string;
      /** Unieke resource identifier (UUID4) */
      uuid?: string;
      /** De unieke identificatie van de ZAAK binnen de organisatie die verantwoordelijk is voor de behandeling van de ZAAK. */
      identificatie?: string;
      /** Het RSIN van de Niet-natuurlijk persoon zijnde de organisatie die de zaak heeft gecreeerd. Dit moet een geldig RSIN zijn van 9 nummers en voldoen aan https://nl.wikipedia.org/wiki/Burgerservicenummer#11-proef */
      bronorganisatie: string;
      /** Een korte omschrijving van de zaak. */
      omschrijving?: string;
      /** Een toelichting op de zaak. */
      toelichting?: string;
      /** URL-referentie naar het ZAAKTYPE (in de Catalogi API) in de CATALOGUS waar deze voorkomt */
      zaaktype: string;
      /** De datum waarop de zaakbehandelende organisatie de ZAAK heeft geregistreerd. Indien deze niet opgegeven wordt, wordt de datum van vandaag gebruikt. */
      registratiedatum?: string;
      /** Het RSIN van de Niet-natuurlijk persoon zijnde de organisatie die eindverantwoordelijk is voor de behandeling van de zaak. Dit moet een geldig RSIN zijn van 9 nummers en voldoen aan https://nl.wikipedia.org/wiki/Burgerservicenummer#11-proef */
      verantwoordelijkeOrganisatie: string;
      /** De datum waarop met de uitvoering van de zaak is gestart */
      startdatum: string;
      /** De datum waarop de uitvoering van de zaak afgerond is. */
      einddatum?: string | null;
      /** De datum waarop volgens de planning verwacht wordt dat de zaak afgerond wordt. */
      einddatumGepland?: string | null;
      /** De laatste datum waarop volgens wet- en regelgeving de zaak afgerond dient te zijn. */
      uiterlijkeEinddatumAfdoening?: string | null;
      /** Datum waarop (het starten van) de zaak gepubliceerd is of wordt. */
      publicatiedatum?: string | null;
      /** Het medium waarlangs de aanleiding om een zaak te starten is ontvangen. URL naar een communicatiekanaal in de VNG-Referentielijst van communicatiekanalen. */
      communicatiekanaal?: string;
      /** De producten en/of diensten die door de zaak worden voortgebracht. Dit zijn URLs naar de resources zoals die door de producten- en dienstencatalogus-API wordt ontsloten. De producten/diensten moeten bij het zaaktype vermeld zijn. */
      productenOfDiensten?: string[];
      /** Aanduiding van de mate waarin het zaakdossier van de ZAAK voor de openbaarheid bestemd is. Optioneel - indien geen waarde gekozen wordt, dan wordt de waarde van het ZAAKTYPE overgenomen. Dit betekent dat de API _altijd_ een waarde teruggeeft. */
      vertrouwelijkheidaanduiding?:
        | "openbaar"
        | "beperkt_openbaar"
        | "intern"
        | "zaakvertrouwelijk"
        | "vertrouwelijk"
        | "confidentieel"
        | "geheim"
        | "zeer_geheim";
      /**
       * Indicatie of de, met behandeling van de zaak gemoeide, kosten betaald zijn door de desbetreffende betrokkene.
       *
       * Uitleg bij mogelijke waarden:
       *
       * * `nvt` - Er is geen sprake van te betalen, met de zaak gemoeide, kosten.
       * * `nog_niet` - De met de zaak gemoeide kosten zijn (nog) niet betaald.
       * * `gedeeltelijk` - De met de zaak gemoeide kosten zijn gedeeltelijk betaald.
       * * `geheel` - De met de zaak gemoeide kosten zijn geheel betaald.
       */
      betalingsindicatie?: "nvt" | "nog_niet" | "gedeeltelijk" | "geheel";
      /** Uitleg bij `betalingsindicatie`. */
      betalingsindicatieWeergave?: string;
      /** De datum waarop de meest recente betaling is verwerkt van kosten die gemoeid zijn met behandeling van de zaak. */
      laatsteBetaaldatum?: string | null;
      zaakgeometrie?: components["schemas"]["GeoJSONGeometry"];
      verlenging?: components["schemas"]["Verlenging"];
      opschorting?: components["schemas"]["Opschorting"];
      /** URL-referentie naar de categorie in de gehanteerde 'Selectielijst Archiefbescheiden' die, gezien het zaaktype en het resultaattype van de zaak, bepalend is voor het archiefregime van de zaak. */
      selectielijstklasse?: string;
      /** URL-referentie naar de ZAAK, waarom verzocht is door de initiator daarvan, die behandeld wordt in twee of meer separate ZAAKen waarvan de onderhavige ZAAK er één is. */
      hoofdzaak?: string | null;
      /** URL-referenties naar deel ZAAKen. */
      deelzaken?: string[];
      /** Een lijst van relevante andere zaken. */
      relevanteAndereZaken?: components["schemas"]["RelevanteZaak"][];
      eigenschappen?: string[];
      /** Indien geen status bekend is, dan is de waarde 'null' */
      status?: string | null;
      /** Lijst van kenmerken. Merk op dat refereren naar gerelateerde objecten beter kan via `ZaakObject`. */
      kenmerken?: components["schemas"]["ZaakKenmerk"][];
      /**
       * Aanduiding of het zaakdossier blijvend bewaard of na een bepaalde termijn vernietigd moet worden.
       *
       * Uitleg bij mogelijke waarden:
       *
       * * `blijvend_bewaren` - Het zaakdossier moet bewaard blijven en op de Archiefactiedatum overgedragen worden naar een archiefbewaarplaats.
       * * `vernietigen` - Het zaakdossier moet op of na de Archiefactiedatum vernietigd worden.
       */
      archiefnominatie?: ("blijvend_bewaren" | "vernietigen") | null;
      /**
       * Aanduiding of het zaakdossier blijvend bewaard of na een bepaalde termijn vernietigd moet worden.
       *
       * Uitleg bij mogelijke waarden:
       *
       * * `nog_te_archiveren` - De zaak cq. het zaakdossier is nog niet als geheel gearchiveerd.
       * * `gearchiveerd` - De zaak cq. het zaakdossier is als geheel niet-wijzigbaar bewaarbaar gemaakt.
       * * `gearchiveerd_procestermijn_onbekend` - De zaak cq. het zaakdossier is als geheel niet-wijzigbaar bewaarbaar gemaakt maar de vernietigingsdatum kan nog niet bepaald worden.
       * * `overgedragen` - De zaak cq. het zaakdossier is overgebracht naar een archiefbewaarplaats.
       */
      archiefstatus?:
        | "nog_te_archiveren"
        | "gearchiveerd"
        | "gearchiveerd_procestermijn_onbekend"
        | "overgedragen";
      /** De datum waarop het gearchiveerde zaakdossier vernietigd moet worden dan wel overgebracht moet worden naar een archiefbewaarplaats. Wordt automatisch berekend bij het aanmaken of wijzigen van een RESULTAAT aan deze ZAAK indien nog leeg. */
      archiefactiedatum?: string | null;
      /** URL-referentie naar het RESULTAAT. Indien geen resultaat bekend is, dan is de waarde 'null' */
      resultaat?: string | null;
      /** De krachtens publiekrecht ingestelde rechtspersoon dan wel ander niet-natuurlijk persoon waarbinnen het (bestuurs)orgaan zetelt dat opdracht heeft gegeven om taken uit te voeren waaraan de zaak invulling geeft. */
      opdrachtgevendeOrganisatie?: string;
    };
    GeoWithin: {
      within?: components["schemas"]["GeoJSONGeometry"];
    };
    ZaakZoek: {
      zaakgeometrie?: components["schemas"]["GeoWithin"];
      /** Array of unieke resource identifiers (UUID4) */
      uuid__in?: string[];
      /** De unieke identificatie van de ZAAK binnen de organisatie die verantwoordelijk is voor de behandeling van de ZAAK. */
      identificatie?: string;
      /** Het RSIN van de Niet-natuurlijk persoon zijnde de organisatie die de zaak heeft gecreeerd. Dit moet een geldig RSIN zijn van 9 nummers en voldoen aan https://nl.wikipedia.org/wiki/Burgerservicenummer#11-proef */
      bronorganisatie?: string;
      /** URL-referentie naar het ZAAKTYPE (in de Catalogi API) in de CATALOGUS waar deze voorkomt */
      zaaktype?: string;
      /**
       * Aanduiding of het zaakdossier blijvend bewaard of na een bepaalde termijn vernietigd moet worden.
       *
       * Uitleg bij mogelijke waarden:
       *
       * * `blijvend_bewaren` - Het zaakdossier moet bewaard blijven en op de Archiefactiedatum overgedragen worden naar een archiefbewaarplaats.
       * * `vernietigen` - Het zaakdossier moet op of na de Archiefactiedatum vernietigd worden.
       */
      archiefnominatie?: "blijvend_bewaren" | "vernietigen";
      /** Multiple values may be separated by commas. */
      archiefnominatie__in?: string;
      /** De datum waarop het gearchiveerde zaakdossier vernietigd moet worden dan wel overgebracht moet worden naar een archiefbewaarplaats. Wordt automatisch berekend bij het aanmaken of wijzigen van een RESULTAAT aan deze ZAAK indien nog leeg. */
      archiefactiedatum?: string;
      /** De datum waarop het gearchiveerde zaakdossier vernietigd moet worden dan wel overgebracht moet worden naar een archiefbewaarplaats. Wordt automatisch berekend bij het aanmaken of wijzigen van een RESULTAAT aan deze ZAAK indien nog leeg. */
      archiefactiedatum__lt?: string;
      /** De datum waarop het gearchiveerde zaakdossier vernietigd moet worden dan wel overgebracht moet worden naar een archiefbewaarplaats. Wordt automatisch berekend bij het aanmaken of wijzigen van een RESULTAAT aan deze ZAAK indien nog leeg. */
      archiefactiedatum__gt?: string;
      /**
       * Aanduiding of het zaakdossier blijvend bewaard of na een bepaalde termijn vernietigd moet worden.
       *
       * Uitleg bij mogelijke waarden:
       *
       * * `nog_te_archiveren` - De zaak cq. het zaakdossier is nog niet als geheel gearchiveerd.
       * * `gearchiveerd` - De zaak cq. het zaakdossier is als geheel niet-wijzigbaar bewaarbaar gemaakt.
       * * `gearchiveerd_procestermijn_onbekend` - De zaak cq. het zaakdossier is als geheel niet-wijzigbaar bewaarbaar gemaakt maar de vernietigingsdatum kan nog niet bepaald worden.
       * * `overgedragen` - De zaak cq. het zaakdossier is overgebracht naar een archiefbewaarplaats.
       */
      archiefstatus?:
        | "nog_te_archiveren"
        | "gearchiveerd"
        | "gearchiveerd_procestermijn_onbekend"
        | "overgedragen";
      /** Multiple values may be separated by commas. */
      archiefstatus__in?: string;
      /** De datum waarop met de uitvoering van de zaak is gestart */
      startdatum?: string;
      /** De datum waarop met de uitvoering van de zaak is gestart */
      startdatum__gt?: string;
      /** De datum waarop met de uitvoering van de zaak is gestart */
      startdatum__gte?: string;
      /** De datum waarop met de uitvoering van de zaak is gestart */
      startdatum__lt?: string;
      /** De datum waarop met de uitvoering van de zaak is gestart */
      startdatum__lte?: string;
      /**
       * Type van de `betrokkene`.
       *
       * Uitleg bij mogelijke waarden:
       *
       * * `natuurlijk_persoon` - Natuurlijk persoon
       * * `niet_natuurlijk_persoon` - Niet-natuurlijk persoon
       * * `vestiging` - Vestiging
       * * `organisatorische_eenheid` - Organisatorische eenheid
       * * `medewerker` - Medewerker
       */
      rol__betrokkeneType?:
        | "natuurlijk_persoon"
        | "niet_natuurlijk_persoon"
        | "vestiging"
        | "organisatorische_eenheid"
        | "medewerker";
      /** URL-referentie naar een betrokkene gerelateerd aan de ZAAK. */
      rol__betrokkene?: string;
      /**
       * Algemeen gehanteerde benaming van de aard van de ROL, afgeleid uit het ROLTYPE.
       *
       * Uitleg bij mogelijke waarden:
       *
       * * `adviseur` - Adviseur
       * * `behandelaar` - Behandelaar
       * * `belanghebbende` - Belanghebbende
       * * `beslisser` - Beslisser
       * * `initiator` - Initiator
       * * `klantcontacter` - Klantcontacter
       * * `zaakcoordinator` - Zaakcoördinator
       * * `mede_initiator` - Mede-initiator
       */
      rol__omschrijvingGeneriek?:
        | "adviseur"
        | "behandelaar"
        | "belanghebbende"
        | "beslisser"
        | "initiator"
        | "klantcontacter"
        | "zaakcoordinator"
        | "mede_initiator";
      /**
       * Zaken met een vertrouwelijkheidaanduiding die beperkter is dan de aangegeven aanduiding worden uit de resultaten gefiltered.
       *
       * Uitleg bij mogelijke waarden:
       *
       * * `openbaar` - Openbaar
       * * `beperkt_openbaar` - Beperkt openbaar
       * * `intern` - Intern
       * * `zaakvertrouwelijk` - Zaakvertrouwelijk
       * * `vertrouwelijk` - Vertrouwelijk
       * * `confidentieel` - Confidentieel
       * * `geheim` - Geheim
       * * `zeer_geheim` - Zeer geheim
       */
      maximaleVertrouwelijkheidaanduiding?:
        | "openbaar"
        | "beperkt_openbaar"
        | "intern"
        | "zaakvertrouwelijk"
        | "vertrouwelijk"
        | "confidentieel"
        | "geheim"
        | "zeer_geheim";
      /** Het burgerservicenummer, bedoeld in artikel 1.1 van de Wet algemene bepalingen burgerservicenummer. */
      rol__betrokkeneIdentificatie__natuurlijkPersoon__inpBsn?: string;
      /** Een korte unieke aanduiding van de MEDEWERKER. */
      rol__betrokkeneIdentificatie__medewerker__identificatie?: string;
      /** Een korte identificatie van de organisatorische eenheid. */
      rol__betrokkeneIdentificatie__organisatorischeEenheid__identificatie?: string;
      /** Which field to use when ordering the results. */
      ordering?: string;
    };
    Wijzigingen: {
      /** Volledige JSON body van het object zoals dat bestond voordat de actie heeft plaatsgevonden. */
      oud?: { [key: string]: any };
      /** Volledige JSON body van het object na de actie. */
      nieuw?: { [key: string]: any };
    };
    AuditTrail: {
      /** Unieke identificatie van de audit regel. */
      uuid?: string;
      /**
       * De naam van het component waar de wijziging in is gedaan.
       *
       * Uitleg bij mogelijke waarden:
       *
       * * `ac` - Autorisaties API
       * * `nrc` - Notificaties API
       * * `zrc` - Zaken API
       * * `ztc` - Catalogi API
       * * `drc` - Documenten API
       * * `brc` - Besluiten API
       * * `cmc` - Contactmomenten API
       * * `kc` - Klanten API
       */
      bron: "ac" | "nrc" | "zrc" | "ztc" | "drc" | "brc" | "cmc" | "kc";
      /** Unieke identificatie van de applicatie, binnen de organisatie. */
      applicatieId?: string;
      /** Vriendelijke naam van de applicatie. */
      applicatieWeergave?: string;
      /** Unieke identificatie van de gebruiker die binnen de organisatie herleid kan worden naar een persoon. */
      gebruikersId?: string;
      /** Vriendelijke naam van de gebruiker. */
      gebruikersWeergave?: string;
      /**
       * De uitgevoerde handeling.
       *
       * De bekende waardes voor dit veld zijn hieronder aangegeven,                         maar andere waardes zijn ook toegestaan
       *
       * Uitleg bij mogelijke waarden:
       *
       * * `create` - Object aangemaakt
       * * `list` - Lijst van objecten opgehaald
       * * `retrieve` - Object opgehaald
       * * `destroy` - Object verwijderd
       * * `update` - Object bijgewerkt
       * * `partial_update` - Object deels bijgewerkt
       */
      actie: string;
      /** Vriendelijke naam van de actie. */
      actieWeergave?: string;
      /** HTTP status code van de API response van de uitgevoerde handeling. */
      resultaat: number;
      /** De URL naar het hoofdobject van een component. */
      hoofdObject: string;
      /** Het type resource waarop de actie gebeurde. */
      resource: string;
      /** De URL naar het object. */
      resourceUrl: string;
      /** Toelichting waarom de handeling is uitgevoerd. */
      toelichting?: string;
      /** Vriendelijke identificatie van het object. */
      resourceWeergave: string;
      /** De datum waarop de handeling is gedaan. */
      aanmaakdatum?: string;
      wijzigingen: components["schemas"]["Wijzigingen"];
    };
    ZaakBesluit: {
      url?: string;
      /** Unieke resource identifier (UUID4) */
      uuid?: string;
      /** URL-referentie naar het BESLUIT (in de Besluiten API), waar ook de relatieinformatie opgevraagd kan worden. */
      besluit: string;
    };
    ZaakEigenschap: {
      url?: string;
      /** Unieke resource identifier (UUID4) */
      uuid?: string;
      zaak: string;
      /** URL-referentie naar de EIGENSCHAP (in de Catalogi API). */
      eigenschap: string;
      /** De naam van de EIGENSCHAP (overgenomen uit de Catalogi API). */
      naam?: string;
      waarde: string;
    };
  };
  responses: {
    /** Bad request */
    400: {
      headers: {
        /** Geeft een specifieke API-versie aan in de context van een specifieke aanroep. Voorbeeld: 1.2.1. */
        "API-version"?: string;
      };
      content: {
        "application/problem+json": components["schemas"]["ValidatieFout"];
      };
    };
    /** Unauthorized */
    401: {
      headers: {
        /** Geeft een specifieke API-versie aan in de context van een specifieke aanroep. Voorbeeld: 1.2.1. */
        "API-version"?: string;
      };
      content: {
        "application/problem+json": components["schemas"]["Fout"];
      };
    };
    /** Forbidden */
    403: {
      headers: {
        /** Geeft een specifieke API-versie aan in de context van een specifieke aanroep. Voorbeeld: 1.2.1. */
        "API-version"?: string;
      };
      content: {
        "application/problem+json": components["schemas"]["Fout"];
      };
    };
    /** Not found */
    404: {
      headers: {
        /** Geeft een specifieke API-versie aan in de context van een specifieke aanroep. Voorbeeld: 1.2.1. */
        "API-version"?: string;
      };
      content: {
        "application/problem+json": components["schemas"]["Fout"];
      };
    };
    /** Not acceptable */
    406: {
      headers: {
        /** Geeft een specifieke API-versie aan in de context van een specifieke aanroep. Voorbeeld: 1.2.1. */
        "API-version"?: string;
      };
      content: {
        "application/problem+json": components["schemas"]["Fout"];
      };
    };
    /** Conflict */
    409: {
      headers: {
        /** Geeft een specifieke API-versie aan in de context van een specifieke aanroep. Voorbeeld: 1.2.1. */
        "API-version"?: string;
      };
      content: {
        "application/problem+json": components["schemas"]["Fout"];
      };
    };
    /** Gone */
    410: {
      headers: {
        /** Geeft een specifieke API-versie aan in de context van een specifieke aanroep. Voorbeeld: 1.2.1. */
        "API-version"?: string;
      };
      content: {
        "application/problem+json": components["schemas"]["Fout"];
      };
    };
    /** Precondition failed */
    412: {
      headers: {
        /** Geeft een specifieke API-versie aan in de context van een specifieke aanroep. Voorbeeld: 1.2.1. */
        "API-version"?: string;
      };
      content: {
        "application/problem+json": components["schemas"]["Fout"];
      };
    };
    /** Unsupported media type */
    415: {
      headers: {
        /** Geeft een specifieke API-versie aan in de context van een specifieke aanroep. Voorbeeld: 1.2.1. */
        "API-version"?: string;
      };
      content: {
        "application/problem+json": components["schemas"]["Fout"];
      };
    };
    /** Too many requests */
    429: {
      headers: {
        /** Geeft een specifieke API-versie aan in de context van een specifieke aanroep. Voorbeeld: 1.2.1. */
        "API-version"?: string;
      };
      content: {
        "application/problem+json": components["schemas"]["Fout"];
      };
    };
    /** Internal server error */
    500: {
      headers: {
        /** Geeft een specifieke API-versie aan in de context van een specifieke aanroep. Voorbeeld: 1.2.1. */
        "API-version"?: string;
      };
      content: {
        "application/problem+json": components["schemas"]["Fout"];
      };
    };
  };
  requestBodies: {
    Resultaat: {
      content: {
        "application/json": components["schemas"]["Resultaat"];
      };
    };
    ZaakInformatieObject: {
      content: {
        "application/json": components["schemas"]["ZaakInformatieObject"];
      };
    };
    Zaak: {
      content: {
        "application/json": components["schemas"]["Zaak"];
      };
    };
  };
}

export interface operations {
  /**
   * Alle KLANTCONTACTen opvragen.
   *
   * **DEPRECATED**: gebruik de contactmomenten API in plaats van deze endpoint.
   */
  klantcontact_list: {
    parameters: {
      query: {
        /** URL-referentie naar de ZAAK. */
        zaak?: string;
        /** Een pagina binnen de gepagineerde set resultaten. */
        page?: number;
      };
    };
    responses: {
      /** OK */
      200: {
        headers: {
          /** Geeft een specifieke API-versie aan in de context van een specifieke aanroep. Voorbeeld: 1.2.1. */
          "API-version"?: string;
          /** Geeft een endpoint-specifieke waarschuwing, zoals het uitfaseren van functionaliteit. */
          Warning?: string;
        };
        content: {
          "application/json": {
            count: number;
            next?: string | null;
            previous?: string | null;
            results: components["schemas"]["KlantContact"][];
          };
        };
      };
      400: components["responses"]["400"];
      401: components["responses"]["401"];
      403: components["responses"]["403"];
      406: components["responses"]["406"];
      409: components["responses"]["409"];
      410: components["responses"]["410"];
      415: components["responses"]["415"];
      429: components["responses"]["429"];
      500: components["responses"]["500"];
    };
  };
  /**
   * Indien geen identificatie gegeven is, dan wordt deze automatisch
   * gegenereerd.
   *
   * **DEPRECATED**: gebruik de contactmomenten API in plaats van deze endpoint.
   */
  klantcontact_create: {
    parameters: {
      header: {
        /** Content type van de verzoekinhoud. */
        "Content-Type": "application/json";
        /** Identifier of the request, traceable throughout the network */
        "X-NLX-Logrecord-ID"?: string;
        /** Toelichting waarom een bepaald verzoek wordt gedaan */
        "X-Audit-Toelichting"?: string;
      };
    };
    responses: {
      /** Created */
      201: {
        headers: {
          /** Geeft een specifieke API-versie aan in de context van een specifieke aanroep. Voorbeeld: 1.2.1. */
          "API-version"?: string;
          /** URL waar de resource leeft. */
          Location?: string;
          /** Geeft een endpoint-specifieke waarschuwing, zoals het uitfaseren van functionaliteit. */
          Warning?: string;
        };
        content: {
          "application/json": components["schemas"]["KlantContact"];
        };
      };
      400: components["responses"]["400"];
      401: components["responses"]["401"];
      403: components["responses"]["403"];
      406: components["responses"]["406"];
      409: components["responses"]["409"];
      410: components["responses"]["410"];
      415: components["responses"]["415"];
      429: components["responses"]["429"];
      500: components["responses"]["500"];
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["KlantContact"];
      };
    };
  };
  /**
   * Een specifiek KLANTCONTACT bij een ZAAK opvragen.
   *
   * **DEPRECATED**: gebruik de contactmomenten API in plaats van deze endpoint.
   */
  klantcontact_read: {
    parameters: {
      header: {
        /** Voer een voorwaardelijk verzoek uit. Deze header moet één of meerdere ETag-waardes bevatten van resources die de consumer gecached heeft. Indien de waarde van de ETag van de huidige resource voorkomt in deze set, dan antwoordt de provider met een lege HTTP 304 request. Zie [MDN](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/If-None-Match) voor meer informatie. */
        "If-None-Match"?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        headers: {
          /** De ETag berekend op de response body JSON. Indien twee resources exact dezelfde ETag hebben, dan zijn deze resources identiek aan elkaar. Je kan de ETag gebruiken om caching te implementeren. */
          ETag?: string;
          /** Geeft een specifieke API-versie aan in de context van een specifieke aanroep. Voorbeeld: 1.2.1. */
          "API-version"?: string;
          /** Geeft een endpoint-specifieke waarschuwing, zoals het uitfaseren van functionaliteit. */
          Warning?: string;
        };
        content: {
          "application/json": components["schemas"]["KlantContact"];
        };
      };
      401: components["responses"]["401"];
      403: components["responses"]["403"];
      404: components["responses"]["404"];
      406: components["responses"]["406"];
      409: components["responses"]["409"];
      410: components["responses"]["410"];
      415: components["responses"]["415"];
      429: components["responses"]["429"];
      500: components["responses"]["500"];
    };
  };
  /** Deze lijst kan gefilterd wordt met query-string parameters. */
  resultaat_list: {
    parameters: {
      query: {
        /** URL-referentie naar de ZAAK. */
        zaak?: string;
        /** URL-referentie naar het RESULTAATTYPE (in de Catalogi API). */
        resultaattype?: string;
        /** Een pagina binnen de gepagineerde set resultaten. */
        page?: number;
      };
    };
    responses: {
      /** OK */
      200: {
        headers: {
          /** Geeft een specifieke API-versie aan in de context van een specifieke aanroep. Voorbeeld: 1.2.1. */
          "API-version"?: string;
        };
        content: {
          "application/json": {
            count: number;
            next?: string | null;
            previous?: string | null;
            results: components["schemas"]["Resultaat"][];
          };
        };
      };
      400: components["responses"]["400"];
      401: components["responses"]["401"];
      403: components["responses"]["403"];
      406: components["responses"]["406"];
      409: components["responses"]["409"];
      410: components["responses"]["410"];
      415: components["responses"]["415"];
      429: components["responses"]["429"];
      500: components["responses"]["500"];
    };
  };
  /**
   * **Er wordt gevalideerd op**
   * - geldigheid URL naar de ZAAK
   * - geldigheid URL naar het RESULTAATTYPE
   */
  resultaat_create: {
    parameters: {
      header: {
        /** Content type van de verzoekinhoud. */
        "Content-Type": "application/json";
        /** Identifier of the request, traceable throughout the network */
        "X-NLX-Logrecord-ID"?: string;
        /** Toelichting waarom een bepaald verzoek wordt gedaan */
        "X-Audit-Toelichting"?: string;
      };
    };
    responses: {
      /** Created */
      201: {
        headers: {
          /** Geeft een specifieke API-versie aan in de context van een specifieke aanroep. Voorbeeld: 1.2.1. */
          "API-version"?: string;
          /** URL waar de resource leeft. */
          Location?: string;
        };
        content: {
          "application/json": components["schemas"]["Resultaat"];
        };
      };
      400: components["responses"]["400"];
      401: components["responses"]["401"];
      403: components["responses"]["403"];
      406: components["responses"]["406"];
      409: components["responses"]["409"];
      410: components["responses"]["410"];
      415: components["responses"]["415"];
      429: components["responses"]["429"];
      500: components["responses"]["500"];
    };
    requestBody: components["requestBodies"]["Resultaat"];
  };
  /** Een specifiek RESULTAAT opvragen. */
  resultaat_read: {
    parameters: {
      header: {
        /** Voer een voorwaardelijk verzoek uit. Deze header moet één of meerdere ETag-waardes bevatten van resources die de consumer gecached heeft. Indien de waarde van de ETag van de huidige resource voorkomt in deze set, dan antwoordt de provider met een lege HTTP 304 request. Zie [MDN](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/If-None-Match) voor meer informatie. */
        "If-None-Match"?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        headers: {
          /** De ETag berekend op de response body JSON. Indien twee resources exact dezelfde ETag hebben, dan zijn deze resources identiek aan elkaar. Je kan de ETag gebruiken om caching te implementeren. */
          ETag?: string;
          /** Geeft een specifieke API-versie aan in de context van een specifieke aanroep. Voorbeeld: 1.2.1. */
          "API-version"?: string;
        };
        content: {
          "application/json": components["schemas"]["Resultaat"];
        };
      };
      401: components["responses"]["401"];
      403: components["responses"]["403"];
      404: components["responses"]["404"];
      406: components["responses"]["406"];
      409: components["responses"]["409"];
      410: components["responses"]["410"];
      415: components["responses"]["415"];
      429: components["responses"]["429"];
      500: components["responses"]["500"];
    };
  };
  /**
   * **Er wordt gevalideerd op**
   * - geldigheid URL naar de ZAAK
   * - het RESULTAATTYPE mag niet gewijzigd worden
   */
  resultaat_update: {
    parameters: {
      header: {
        /** Content type van de verzoekinhoud. */
        "Content-Type": "application/json";
        /** Identifier of the request, traceable throughout the network */
        "X-NLX-Logrecord-ID"?: string;
        /** Toelichting waarom een bepaald verzoek wordt gedaan */
        "X-Audit-Toelichting"?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        headers: {
          /** Geeft een specifieke API-versie aan in de context van een specifieke aanroep. Voorbeeld: 1.2.1. */
          "API-version"?: string;
        };
        content: {
          "application/json": components["schemas"]["Resultaat"];
        };
      };
      400: components["responses"]["400"];
      401: components["responses"]["401"];
      403: components["responses"]["403"];
      404: components["responses"]["404"];
      406: components["responses"]["406"];
      409: components["responses"]["409"];
      410: components["responses"]["410"];
      415: components["responses"]["415"];
      429: components["responses"]["429"];
      500: components["responses"]["500"];
    };
    requestBody: components["requestBodies"]["Resultaat"];
  };
  /** Verwijder een RESULTAAT van een ZAAK. */
  resultaat_delete: {
    parameters: {
      header: {
        /** Identifier of the request, traceable throughout the network */
        "X-NLX-Logrecord-ID"?: string;
        /** Toelichting waarom een bepaald verzoek wordt gedaan */
        "X-Audit-Toelichting"?: string;
      };
    };
    responses: {
      /** No content */
      204: never;
      401: components["responses"]["401"];
      403: components["responses"]["403"];
      404: components["responses"]["404"];
      406: components["responses"]["406"];
      409: components["responses"]["409"];
      410: components["responses"]["410"];
      415: components["responses"]["415"];
      429: components["responses"]["429"];
      500: components["responses"]["500"];
    };
  };
  /** Vraag de headers op die je bij een GET request zou krijgen. */
  resultaat_headers: {
    parameters: {
      header: {
        /** Voer een voorwaardelijk verzoek uit. Deze header moet één of meerdere ETag-waardes bevatten van resources die de consumer gecached heeft. Indien de waarde van de ETag van de huidige resource voorkomt in deze set, dan antwoordt de provider met een lege HTTP 304 request. Zie [MDN](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/If-None-Match) voor meer informatie. */
        "If-None-Match"?: string;
      };
    };
    responses: {
      /** OK */
      200: unknown;
    };
  };
  /**
   * **Er wordt gevalideerd op**
   * - geldigheid URL naar de ZAAK
   * - het RESULTAATTYPE mag niet gewijzigd worden
   */
  resultaat_partial_update: {
    parameters: {
      header: {
        /** Content type van de verzoekinhoud. */
        "Content-Type": "application/json";
        /** Identifier of the request, traceable throughout the network */
        "X-NLX-Logrecord-ID"?: string;
        /** Toelichting waarom een bepaald verzoek wordt gedaan */
        "X-Audit-Toelichting"?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        headers: {
          /** Geeft een specifieke API-versie aan in de context van een specifieke aanroep. Voorbeeld: 1.2.1. */
          "API-version"?: string;
        };
        content: {
          "application/json": components["schemas"]["Resultaat"];
        };
      };
      400: components["responses"]["400"];
      401: components["responses"]["401"];
      403: components["responses"]["403"];
      404: components["responses"]["404"];
      406: components["responses"]["406"];
      409: components["responses"]["409"];
      410: components["responses"]["410"];
      415: components["responses"]["415"];
      429: components["responses"]["429"];
      500: components["responses"]["500"];
    };
    requestBody: components["requestBodies"]["Resultaat"];
  };
  /** Deze lijst kan gefilterd wordt met query-string parameters. */
  rol_list: {
    parameters: {
      query: {
        /** URL-referentie naar de ZAAK. */
        zaak?: string;
        /** URL-referentie naar een betrokkene gerelateerd aan de ZAAK. */
        betrokkene?: string;
        /** Type van de `betrokkene`. */
        betrokkeneType?:
          | "natuurlijk_persoon"
          | "niet_natuurlijk_persoon"
          | "vestiging"
          | "organisatorische_eenheid"
          | "medewerker";
        /** Het burgerservicenummer, bedoeld in artikel 1.1 van de Wet algemene bepalingen burgerservicenummer. */
        betrokkeneIdentificatie__natuurlijkPersoon__inpBsn?: string;
        /** Het door de gemeente uitgegeven unieke nummer voor een ANDER NATUURLIJK PERSOON */
        betrokkeneIdentificatie__natuurlijkPersoon__anpIdentificatie?: string;
        /** Het administratienummer van de persoon, bedoeld in de Wet BRP */
        betrokkeneIdentificatie__natuurlijkPersoon__inpA_nummer?: string;
        /** Het door een kamer toegekend uniek nummer voor de INGESCHREVEN NIET-NATUURLIJK PERSOON */
        betrokkeneIdentificatie__nietNatuurlijkPersoon__innNnpId?: string;
        /** Het door de gemeente uitgegeven unieke nummer voor een ANDER NIET-NATUURLIJK PERSOON */
        betrokkeneIdentificatie__nietNatuurlijkPersoon__annIdentificatie?: string;
        /** Een korte unieke aanduiding van de Vestiging. */
        betrokkeneIdentificatie__vestiging__vestigingsNummer?: string;
        /** Een korte identificatie van de organisatorische eenheid. */
        betrokkeneIdentificatie__organisatorischeEenheid__identificatie?: string;
        /** Een korte unieke aanduiding van de MEDEWERKER. */
        betrokkeneIdentificatie__medewerker__identificatie?: string;
        /** URL-referentie naar een roltype binnen het ZAAKTYPE van de ZAAK. */
        roltype?: string;
        /** Omschrijving van de aard van de ROL, afgeleid uit het ROLTYPE. */
        omschrijving?: string;
        /** Algemeen gehanteerde benaming van de aard van de ROL, afgeleid uit het ROLTYPE. */
        omschrijvingGeneriek?:
          | "adviseur"
          | "behandelaar"
          | "belanghebbende"
          | "beslisser"
          | "initiator"
          | "klantcontacter"
          | "zaakcoordinator"
          | "mede_initiator";
        /** Een pagina binnen de gepagineerde set resultaten. */
        page?: number;
      };
    };
    responses: {
      /** OK */
      200: {
        headers: {
          /** Geeft een specifieke API-versie aan in de context van een specifieke aanroep. Voorbeeld: 1.2.1. */
          "API-version"?: string;
        };
        content: {
          "application/json": {
            count: number;
            next?: string | null;
            previous?: string | null;
            results: components["schemas"]["Rol"][];
          };
        };
      };
      400: components["responses"]["400"];
      401: components["responses"]["401"];
      403: components["responses"]["403"];
      406: components["responses"]["406"];
      409: components["responses"]["409"];
      410: components["responses"]["410"];
      415: components["responses"]["415"];
      429: components["responses"]["429"];
      500: components["responses"]["500"];
    };
  };
  /** Maak een ROL aan bij een ZAAK. */
  rol_create: {
    parameters: {
      header: {
        /** Content type van de verzoekinhoud. */
        "Content-Type": "application/json";
        /** Identifier of the request, traceable throughout the network */
        "X-NLX-Logrecord-ID"?: string;
        /** Toelichting waarom een bepaald verzoek wordt gedaan */
        "X-Audit-Toelichting"?: string;
      };
    };
    responses: {
      /** Created */
      201: {
        headers: {
          /** Geeft een specifieke API-versie aan in de context van een specifieke aanroep. Voorbeeld: 1.2.1. */
          "API-version"?: string;
          /** URL waar de resource leeft. */
          Location?: string;
        };
        content: {
          "application/json": components["schemas"]["Rol"];
        };
      };
      400: components["responses"]["400"];
      401: components["responses"]["401"];
      403: components["responses"]["403"];
      406: components["responses"]["406"];
      409: components["responses"]["409"];
      410: components["responses"]["410"];
      415: components["responses"]["415"];
      429: components["responses"]["429"];
      500: components["responses"]["500"];
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["Rol"];
      };
    };
  };
  /** Een specifieke ROL bij een ZAAK opvragen. */
  rol_read: {
    parameters: {
      header: {
        /** Voer een voorwaardelijk verzoek uit. Deze header moet één of meerdere ETag-waardes bevatten van resources die de consumer gecached heeft. Indien de waarde van de ETag van de huidige resource voorkomt in deze set, dan antwoordt de provider met een lege HTTP 304 request. Zie [MDN](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/If-None-Match) voor meer informatie. */
        "If-None-Match"?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        headers: {
          /** De ETag berekend op de response body JSON. Indien twee resources exact dezelfde ETag hebben, dan zijn deze resources identiek aan elkaar. Je kan de ETag gebruiken om caching te implementeren. */
          ETag?: string;
          /** Geeft een specifieke API-versie aan in de context van een specifieke aanroep. Voorbeeld: 1.2.1. */
          "API-version"?: string;
        };
        content: {
          "application/json": components["schemas"]["Rol"];
        };
      };
      401: components["responses"]["401"];
      403: components["responses"]["403"];
      404: components["responses"]["404"];
      406: components["responses"]["406"];
      409: components["responses"]["409"];
      410: components["responses"]["410"];
      415: components["responses"]["415"];
      429: components["responses"]["429"];
      500: components["responses"]["500"];
    };
  };
  /** Verwijder een ROL van een ZAAK. */
  rol_delete: {
    parameters: {
      header: {
        /** Identifier of the request, traceable throughout the network */
        "X-NLX-Logrecord-ID"?: string;
        /** Toelichting waarom een bepaald verzoek wordt gedaan */
        "X-Audit-Toelichting"?: string;
      };
    };
    responses: {
      /** No content */
      204: never;
      401: components["responses"]["401"];
      403: components["responses"]["403"];
      404: components["responses"]["404"];
      406: components["responses"]["406"];
      409: components["responses"]["409"];
      410: components["responses"]["410"];
      415: components["responses"]["415"];
      429: components["responses"]["429"];
      500: components["responses"]["500"];
    };
  };
  /** Vraag de headers op die je bij een GET request zou krijgen. */
  rol_headers: {
    parameters: {
      header: {
        /** Voer een voorwaardelijk verzoek uit. Deze header moet één of meerdere ETag-waardes bevatten van resources die de consumer gecached heeft. Indien de waarde van de ETag van de huidige resource voorkomt in deze set, dan antwoordt de provider met een lege HTTP 304 request. Zie [MDN](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/If-None-Match) voor meer informatie. */
        "If-None-Match"?: string;
      };
    };
    responses: {
      /** OK */
      200: unknown;
    };
  };
  /** Deze lijst kan gefilterd wordt met query-string parameters. */
  status_list: {
    parameters: {
      query: {
        /** URL-referentie naar de ZAAK. */
        zaak?: string;
        /** URL-referentie naar het STATUSTYPE (in de Catalogi API). */
        statustype?: string;
        /** Een pagina binnen de gepagineerde set resultaten. */
        page?: number;
      };
    };
    responses: {
      /** OK */
      200: {
        headers: {
          /** Geeft een specifieke API-versie aan in de context van een specifieke aanroep. Voorbeeld: 1.2.1. */
          "API-version"?: string;
        };
        content: {
          "application/json": {
            count: number;
            next?: string | null;
            previous?: string | null;
            results: components["schemas"]["Status"][];
          };
        };
      };
      400: components["responses"]["400"];
      401: components["responses"]["401"];
      403: components["responses"]["403"];
      406: components["responses"]["406"];
      409: components["responses"]["409"];
      410: components["responses"]["410"];
      415: components["responses"]["415"];
      429: components["responses"]["429"];
      500: components["responses"]["500"];
    };
  };
  /**
   * **Er wordt gevalideerd op**
   * - geldigheid URL naar de ZAAK
   * - geldigheid URL naar het STATUSTYPE
   * - indien het de eindstatus betreft, dan moet het attribuut
   *   `indicatieGebruiksrecht` gezet zijn op alle informatieobjecten die aan
   *   de zaak gerelateerd zijn
   *
   * **Opmerkingen**
   * - Indien het statustype de eindstatus is (volgens het ZTC), dan wordt de
   *   zaak afgesloten door de einddatum te zetten.
   */
  status_create: {
    parameters: {
      header: {
        /** Content type van de verzoekinhoud. */
        "Content-Type": "application/json";
        /** Identifier of the request, traceable throughout the network */
        "X-NLX-Logrecord-ID"?: string;
        /** Toelichting waarom een bepaald verzoek wordt gedaan */
        "X-Audit-Toelichting"?: string;
      };
    };
    responses: {
      /** Created */
      201: {
        headers: {
          /** Geeft een specifieke API-versie aan in de context van een specifieke aanroep. Voorbeeld: 1.2.1. */
          "API-version"?: string;
          /** URL waar de resource leeft. */
          Location?: string;
        };
        content: {
          "application/json": components["schemas"]["Status"];
        };
      };
      400: components["responses"]["400"];
      401: components["responses"]["401"];
      403: components["responses"]["403"];
      406: components["responses"]["406"];
      409: components["responses"]["409"];
      410: components["responses"]["410"];
      415: components["responses"]["415"];
      429: components["responses"]["429"];
      500: components["responses"]["500"];
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["Status"];
      };
    };
  };
  /** Een specifieke STATUS van een ZAAK opvragen. */
  status_read: {
    parameters: {
      header: {
        /** Voer een voorwaardelijk verzoek uit. Deze header moet één of meerdere ETag-waardes bevatten van resources die de consumer gecached heeft. Indien de waarde van de ETag van de huidige resource voorkomt in deze set, dan antwoordt de provider met een lege HTTP 304 request. Zie [MDN](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/If-None-Match) voor meer informatie. */
        "If-None-Match"?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        headers: {
          /** De ETag berekend op de response body JSON. Indien twee resources exact dezelfde ETag hebben, dan zijn deze resources identiek aan elkaar. Je kan de ETag gebruiken om caching te implementeren. */
          ETag?: string;
          /** Geeft een specifieke API-versie aan in de context van een specifieke aanroep. Voorbeeld: 1.2.1. */
          "API-version"?: string;
        };
        content: {
          "application/json": components["schemas"]["Status"];
        };
      };
      401: components["responses"]["401"];
      403: components["responses"]["403"];
      404: components["responses"]["404"];
      406: components["responses"]["406"];
      409: components["responses"]["409"];
      410: components["responses"]["410"];
      415: components["responses"]["415"];
      429: components["responses"]["429"];
      500: components["responses"]["500"];
    };
  };
  /** Vraag de headers op die je bij een GET request zou krijgen. */
  status_headers: {
    parameters: {
      header: {
        /** Voer een voorwaardelijk verzoek uit. Deze header moet één of meerdere ETag-waardes bevatten van resources die de consumer gecached heeft. Indien de waarde van de ETag van de huidige resource voorkomt in deze set, dan antwoordt de provider met een lege HTTP 304 request. Zie [MDN](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/If-None-Match) voor meer informatie. */
        "If-None-Match"?: string;
      };
    };
    responses: {
      /** OK */
      200: unknown;
    };
  };
  /** Alle ZAAKCONTACTMOMENTen opvragen. */
  zaakcontactmoment_list: {
    parameters: {
      query: {
        /** URL-referentie naar de ZAAK. */
        zaak?: string;
        /** URL-referentie naar het CONTACTMOMENT (in de Klantinteractie API) */
        contactmoment?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        headers: {
          /** Geeft een specifieke API-versie aan in de context van een specifieke aanroep. Voorbeeld: 1.2.1. */
          "API-version"?: string;
        };
        content: {
          "application/json": components["schemas"]["ZaakContactMoment"][];
        };
      };
      400: components["responses"]["400"];
      401: components["responses"]["401"];
      403: components["responses"]["403"];
      406: components["responses"]["406"];
      409: components["responses"]["409"];
      410: components["responses"]["410"];
      415: components["responses"]["415"];
      429: components["responses"]["429"];
      500: components["responses"]["500"];
    };
  };
  /**
   * **Er wordt gevalideerd op**
   * - geldigheid URL naar de CONTACTMOMENT
   */
  zaakcontactmoment_create: {
    parameters: {
      header: {
        /** Content type van de verzoekinhoud. */
        "Content-Type": "application/json";
        /** Identifier of the request, traceable throughout the network */
        "X-NLX-Logrecord-ID"?: string;
        /** Toelichting waarom een bepaald verzoek wordt gedaan */
        "X-Audit-Toelichting"?: string;
      };
    };
    responses: {
      /** Created */
      201: {
        headers: {
          /** Geeft een specifieke API-versie aan in de context van een specifieke aanroep. Voorbeeld: 1.2.1. */
          "API-version"?: string;
          /** URL waar de resource leeft. */
          Location?: string;
        };
        content: {
          "application/json": components["schemas"]["ZaakContactMoment"];
        };
      };
      400: components["responses"]["400"];
      401: components["responses"]["401"];
      403: components["responses"]["403"];
      406: components["responses"]["406"];
      409: components["responses"]["409"];
      410: components["responses"]["410"];
      415: components["responses"]["415"];
      429: components["responses"]["429"];
      500: components["responses"]["500"];
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["ZaakContactMoment"];
      };
    };
  };
  /** Een specifiek ZAAKCONTACTMOMENT opvragen. */
  zaakcontactmoment_read: {
    parameters: {
      header: {
        /** Voer een voorwaardelijk verzoek uit. Deze header moet één of meerdere ETag-waardes bevatten van resources die de consumer gecached heeft. Indien de waarde van de ETag van de huidige resource voorkomt in deze set, dan antwoordt de provider met een lege HTTP 304 request. Zie [MDN](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/If-None-Match) voor meer informatie. */
        "If-None-Match"?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        headers: {
          /** De ETag berekend op de response body JSON. Indien twee resources exact dezelfde ETag hebben, dan zijn deze resources identiek aan elkaar. Je kan de ETag gebruiken om caching te implementeren. */
          ETag?: string;
          /** Geeft een specifieke API-versie aan in de context van een specifieke aanroep. Voorbeeld: 1.2.1. */
          "API-version"?: string;
        };
        content: {
          "application/json": components["schemas"]["ZaakContactMoment"];
        };
      };
      401: components["responses"]["401"];
      403: components["responses"]["403"];
      404: components["responses"]["404"];
      406: components["responses"]["406"];
      409: components["responses"]["409"];
      410: components["responses"]["410"];
      415: components["responses"]["415"];
      429: components["responses"]["429"];
      500: components["responses"]["500"];
    };
  };
  /** Verwijder een ZAAKCONTACTMOMENT. */
  zaakcontactmoment_delete: {
    parameters: {
      header: {
        /** Identifier of the request, traceable throughout the network */
        "X-NLX-Logrecord-ID"?: string;
        /** Toelichting waarom een bepaald verzoek wordt gedaan */
        "X-Audit-Toelichting"?: string;
      };
    };
    responses: {
      /** No content */
      204: never;
      401: components["responses"]["401"];
      403: components["responses"]["403"];
      404: components["responses"]["404"];
      406: components["responses"]["406"];
      409: components["responses"]["409"];
      410: components["responses"]["410"];
      415: components["responses"]["415"];
      429: components["responses"]["429"];
      500: components["responses"]["500"];
    };
  };
  /** Deze lijst kan gefilterd wordt met querystringparameters. */
  zaakinformatieobject_list: {
    parameters: {
      query: {
        /** URL-referentie naar de ZAAK. */
        zaak?: string;
        /** URL-referentie naar het INFORMATIEOBJECT (in de Documenten API), waar ook de relatieinformatie opgevraagd kan worden. */
        informatieobject?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        headers: {
          /** Geeft een specifieke API-versie aan in de context van een specifieke aanroep. Voorbeeld: 1.2.1. */
          "API-version"?: string;
        };
        content: {
          "application/json": components["schemas"]["ZaakInformatieObject"][];
        };
      };
      400: components["responses"]["400"];
      401: components["responses"]["401"];
      403: components["responses"]["403"];
      406: components["responses"]["406"];
      409: components["responses"]["409"];
      410: components["responses"]["410"];
      415: components["responses"]["415"];
      429: components["responses"]["429"];
      500: components["responses"]["500"];
    };
  };
  /**
   * Er worden twee types van
   * relaties met andere objecten gerealiseerd:
   *
   * **Er wordt gevalideerd op**
   * - geldigheid zaak URL
   * - geldigheid informatieobject URL
   * - de combinatie informatieobject en zaak moet uniek zijn
   *
   * **Opmerkingen**
   * - De registratiedatum wordt door het systeem op 'NU' gezet. De `aardRelatie`
   *   wordt ook door het systeem gezet.
   * - Bij het aanmaken wordt ook in de Documenten API de gespiegelde relatie aangemaakt,
   *   echter zonder de relatie-informatie.
   *
   * Registreer welk(e) INFORMATIEOBJECT(en) een ZAAK kent.
   *
   * **Er wordt gevalideerd op**
   * - geldigheid informatieobject URL
   * - uniek zijn van relatie ZAAK-INFORMATIEOBJECT
   */
  zaakinformatieobject_create: {
    parameters: {
      header: {
        /** Content type van de verzoekinhoud. */
        "Content-Type": "application/json";
        /** Identifier of the request, traceable throughout the network */
        "X-NLX-Logrecord-ID"?: string;
        /** Toelichting waarom een bepaald verzoek wordt gedaan */
        "X-Audit-Toelichting"?: string;
      };
    };
    responses: {
      /** Created */
      201: {
        headers: {
          /** Geeft een specifieke API-versie aan in de context van een specifieke aanroep. Voorbeeld: 1.2.1. */
          "API-version"?: string;
          /** URL waar de resource leeft. */
          Location?: string;
        };
        content: {
          "application/json": components["schemas"]["ZaakInformatieObject"];
        };
      };
      400: components["responses"]["400"];
      401: components["responses"]["401"];
      403: components["responses"]["403"];
      406: components["responses"]["406"];
      409: components["responses"]["409"];
      410: components["responses"]["410"];
      415: components["responses"]["415"];
      429: components["responses"]["429"];
      500: components["responses"]["500"];
    };
    requestBody: components["requestBodies"]["ZaakInformatieObject"];
  };
  /** Een specifieke ZAAK-INFORMATIEOBJECT relatie opvragen. */
  zaakinformatieobject_read: {
    parameters: {
      header: {
        /** Voer een voorwaardelijk verzoek uit. Deze header moet één of meerdere ETag-waardes bevatten van resources die de consumer gecached heeft. Indien de waarde van de ETag van de huidige resource voorkomt in deze set, dan antwoordt de provider met een lege HTTP 304 request. Zie [MDN](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/If-None-Match) voor meer informatie. */
        "If-None-Match"?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        headers: {
          /** De ETag berekend op de response body JSON. Indien twee resources exact dezelfde ETag hebben, dan zijn deze resources identiek aan elkaar. Je kan de ETag gebruiken om caching te implementeren. */
          ETag?: string;
          /** Geeft een specifieke API-versie aan in de context van een specifieke aanroep. Voorbeeld: 1.2.1. */
          "API-version"?: string;
        };
        content: {
          "application/json": components["schemas"]["ZaakInformatieObject"];
        };
      };
      401: components["responses"]["401"];
      403: components["responses"]["403"];
      404: components["responses"]["404"];
      406: components["responses"]["406"];
      409: components["responses"]["409"];
      410: components["responses"]["410"];
      415: components["responses"]["415"];
      429: components["responses"]["429"];
      500: components["responses"]["500"];
    };
  };
  /**
   * Je mag enkel de gegevens
   * van de relatie bewerken, en niet de relatie zelf aanpassen.
   *
   * **Er wordt gevalideerd op**
   * - informatieobject URL en zaak URL mogen niet veranderen
   */
  zaakinformatieobject_update: {
    parameters: {
      header: {
        /** Content type van de verzoekinhoud. */
        "Content-Type": "application/json";
        /** Identifier of the request, traceable throughout the network */
        "X-NLX-Logrecord-ID"?: string;
        /** Toelichting waarom een bepaald verzoek wordt gedaan */
        "X-Audit-Toelichting"?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        headers: {
          /** Geeft een specifieke API-versie aan in de context van een specifieke aanroep. Voorbeeld: 1.2.1. */
          "API-version"?: string;
        };
        content: {
          "application/json": components["schemas"]["ZaakInformatieObject"];
        };
      };
      400: components["responses"]["400"];
      401: components["responses"]["401"];
      403: components["responses"]["403"];
      404: components["responses"]["404"];
      406: components["responses"]["406"];
      409: components["responses"]["409"];
      410: components["responses"]["410"];
      415: components["responses"]["415"];
      429: components["responses"]["429"];
      500: components["responses"]["500"];
    };
    requestBody: components["requestBodies"]["ZaakInformatieObject"];
  };
  /**
   * De gespiegelde relatie in de Documenten API wordt door de Zaken API
   * verwijderd. Consumers kunnen dit niet handmatig doen..
   */
  zaakinformatieobject_delete: {
    parameters: {
      header: {
        /** Identifier of the request, traceable throughout the network */
        "X-NLX-Logrecord-ID"?: string;
        /** Toelichting waarom een bepaald verzoek wordt gedaan */
        "X-Audit-Toelichting"?: string;
      };
    };
    responses: {
      /** No content */
      204: never;
      401: components["responses"]["401"];
      403: components["responses"]["403"];
      404: components["responses"]["404"];
      406: components["responses"]["406"];
      409: components["responses"]["409"];
      410: components["responses"]["410"];
      415: components["responses"]["415"];
      429: components["responses"]["429"];
      500: components["responses"]["500"];
    };
  };
  /** Vraag de headers op die je bij een GET request zou krijgen. */
  zaakinformatieobject_headers: {
    parameters: {
      header: {
        /** Voer een voorwaardelijk verzoek uit. Deze header moet één of meerdere ETag-waardes bevatten van resources die de consumer gecached heeft. Indien de waarde van de ETag van de huidige resource voorkomt in deze set, dan antwoordt de provider met een lege HTTP 304 request. Zie [MDN](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/If-None-Match) voor meer informatie. */
        "If-None-Match"?: string;
      };
    };
    responses: {
      /** OK */
      200: unknown;
    };
  };
  /**
   * Je mag enkel de gegevens
   * van de relatie bewerken, en niet de relatie zelf aanpassen.
   *
   * **Er wordt gevalideerd op**
   * - informatieobject URL en zaak URL mogen niet veranderen
   */
  zaakinformatieobject_partial_update: {
    parameters: {
      header: {
        /** Content type van de verzoekinhoud. */
        "Content-Type": "application/json";
        /** Identifier of the request, traceable throughout the network */
        "X-NLX-Logrecord-ID"?: string;
        /** Toelichting waarom een bepaald verzoek wordt gedaan */
        "X-Audit-Toelichting"?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        headers: {
          /** Geeft een specifieke API-versie aan in de context van een specifieke aanroep. Voorbeeld: 1.2.1. */
          "API-version"?: string;
        };
        content: {
          "application/json": components["schemas"]["ZaakInformatieObject"];
        };
      };
      400: components["responses"]["400"];
      401: components["responses"]["401"];
      403: components["responses"]["403"];
      404: components["responses"]["404"];
      406: components["responses"]["406"];
      409: components["responses"]["409"];
      410: components["responses"]["410"];
      415: components["responses"]["415"];
      429: components["responses"]["429"];
      500: components["responses"]["500"];
    };
    requestBody: components["requestBodies"]["ZaakInformatieObject"];
  };
  /** Deze lijst kan gefilterd wordt met query-string parameters. */
  zaakobject_list: {
    parameters: {
      query: {
        /** URL-referentie naar de ZAAK. */
        zaak?: string;
        /** URL-referentie naar de resource die het OBJECT beschrijft. */
        object?: string;
        /** Beschrijft het type OBJECT gerelateerd aan de ZAAK. Als er geen passend type is, dan moet het type worden opgegeven onder `objectTypeOverige`. */
        objectType?:
          | "adres"
          | "besluit"
          | "buurt"
          | "enkelvoudig_document"
          | "gemeente"
          | "gemeentelijke_openbare_ruimte"
          | "huishouden"
          | "inrichtingselement"
          | "kadastrale_onroerende_zaak"
          | "kunstwerkdeel"
          | "maatschappelijke_activiteit"
          | "medewerker"
          | "natuurlijk_persoon"
          | "niet_natuurlijk_persoon"
          | "openbare_ruimte"
          | "organisatorische_eenheid"
          | "pand"
          | "spoorbaandeel"
          | "status"
          | "terreindeel"
          | "terrein_gebouwd_object"
          | "vestiging"
          | "waterdeel"
          | "wegdeel"
          | "wijk"
          | "woonplaats"
          | "woz_deelobject"
          | "woz_object"
          | "woz_waarde"
          | "zakelijk_recht"
          | "overige";
        /** Een pagina binnen de gepagineerde set resultaten. */
        page?: number;
      };
    };
    responses: {
      /** OK */
      200: {
        headers: {
          /** Geeft een specifieke API-versie aan in de context van een specifieke aanroep. Voorbeeld: 1.2.1. */
          "API-version"?: string;
        };
        content: {
          "application/json": {
            count: number;
            next?: string | null;
            previous?: string | null;
            results: components["schemas"]["ZaakObject"][];
          };
        };
      };
      400: components["responses"]["400"];
      401: components["responses"]["401"];
      403: components["responses"]["403"];
      406: components["responses"]["406"];
      409: components["responses"]["409"];
      410: components["responses"]["410"];
      415: components["responses"]["415"];
      429: components["responses"]["429"];
      500: components["responses"]["500"];
    };
  };
  /** Maak een ZAAKOBJECT aan. */
  zaakobject_create: {
    parameters: {
      header: {
        /** Content type van de verzoekinhoud. */
        "Content-Type": "application/json";
        /** Identifier of the request, traceable throughout the network */
        "X-NLX-Logrecord-ID"?: string;
        /** Toelichting waarom een bepaald verzoek wordt gedaan */
        "X-Audit-Toelichting"?: string;
      };
    };
    responses: {
      /** Created */
      201: {
        headers: {
          /** Geeft een specifieke API-versie aan in de context van een specifieke aanroep. Voorbeeld: 1.2.1. */
          "API-version"?: string;
          /** URL waar de resource leeft. */
          Location?: string;
        };
        content: {
          "application/json": components["schemas"]["ZaakObject"];
        };
      };
      400: components["responses"]["400"];
      401: components["responses"]["401"];
      403: components["responses"]["403"];
      406: components["responses"]["406"];
      409: components["responses"]["409"];
      410: components["responses"]["410"];
      415: components["responses"]["415"];
      429: components["responses"]["429"];
      500: components["responses"]["500"];
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["ZaakObject"];
      };
    };
  };
  /** Een specifiek ZAAKOBJECT opvragen. */
  zaakobject_read: {
    parameters: {
      header: {
        /** Voer een voorwaardelijk verzoek uit. Deze header moet één of meerdere ETag-waardes bevatten van resources die de consumer gecached heeft. Indien de waarde van de ETag van de huidige resource voorkomt in deze set, dan antwoordt de provider met een lege HTTP 304 request. Zie [MDN](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/If-None-Match) voor meer informatie. */
        "If-None-Match"?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        headers: {
          /** De ETag berekend op de response body JSON. Indien twee resources exact dezelfde ETag hebben, dan zijn deze resources identiek aan elkaar. Je kan de ETag gebruiken om caching te implementeren. */
          ETag?: string;
          /** Geeft een specifieke API-versie aan in de context van een specifieke aanroep. Voorbeeld: 1.2.1. */
          "API-version"?: string;
        };
        content: {
          "application/json": components["schemas"]["ZaakObject"];
        };
      };
      401: components["responses"]["401"];
      403: components["responses"]["403"];
      404: components["responses"]["404"];
      406: components["responses"]["406"];
      409: components["responses"]["409"];
      410: components["responses"]["410"];
      415: components["responses"]["415"];
      429: components["responses"]["429"];
      500: components["responses"]["500"];
    };
  };
  /** Alle ZAAK-VERZOEK opvragen. */
  zaakverzoek_list: {
    parameters: {
      query: {
        /** URL-referentie naar de ZAAK. */
        zaak?: string;
        /** URL-referentie naar het VERZOEK (in de Klantinteractie API) */
        verzoek?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        headers: {
          /** Geeft een specifieke API-versie aan in de context van een specifieke aanroep. Voorbeeld: 1.2.1. */
          "API-version"?: string;
        };
        content: {
          "application/json": components["schemas"]["ZaakVerzoek"][];
        };
      };
      400: components["responses"]["400"];
      401: components["responses"]["401"];
      403: components["responses"]["403"];
      406: components["responses"]["406"];
      409: components["responses"]["409"];
      410: components["responses"]["410"];
      415: components["responses"]["415"];
      429: components["responses"]["429"];
      500: components["responses"]["500"];
    };
  };
  /**
   * **Er wordt gevalideerd op**
   * - geldigheid URL naar de VERZOEK
   */
  zaakverzoek_create: {
    parameters: {
      header: {
        /** Content type van de verzoekinhoud. */
        "Content-Type": "application/json";
        /** Identifier of the request, traceable throughout the network */
        "X-NLX-Logrecord-ID"?: string;
        /** Toelichting waarom een bepaald verzoek wordt gedaan */
        "X-Audit-Toelichting"?: string;
      };
    };
    responses: {
      /** Created */
      201: {
        headers: {
          /** Geeft een specifieke API-versie aan in de context van een specifieke aanroep. Voorbeeld: 1.2.1. */
          "API-version"?: string;
          /** URL waar de resource leeft. */
          Location?: string;
        };
        content: {
          "application/json": components["schemas"]["ZaakVerzoek"];
        };
      };
      400: components["responses"]["400"];
      401: components["responses"]["401"];
      403: components["responses"]["403"];
      406: components["responses"]["406"];
      409: components["responses"]["409"];
      410: components["responses"]["410"];
      415: components["responses"]["415"];
      429: components["responses"]["429"];
      500: components["responses"]["500"];
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["ZaakVerzoek"];
      };
    };
  };
  /** Een specifiek ZAAK-VERZOEK opvragen. */
  zaakverzoek_read: {
    parameters: {
      header: {
        /** Voer een voorwaardelijk verzoek uit. Deze header moet één of meerdere ETag-waardes bevatten van resources die de consumer gecached heeft. Indien de waarde van de ETag van de huidige resource voorkomt in deze set, dan antwoordt de provider met een lege HTTP 304 request. Zie [MDN](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/If-None-Match) voor meer informatie. */
        "If-None-Match"?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        headers: {
          /** De ETag berekend op de response body JSON. Indien twee resources exact dezelfde ETag hebben, dan zijn deze resources identiek aan elkaar. Je kan de ETag gebruiken om caching te implementeren. */
          ETag?: string;
          /** Geeft een specifieke API-versie aan in de context van een specifieke aanroep. Voorbeeld: 1.2.1. */
          "API-version"?: string;
        };
        content: {
          "application/json": components["schemas"]["ZaakVerzoek"];
        };
      };
      401: components["responses"]["401"];
      403: components["responses"]["403"];
      404: components["responses"]["404"];
      406: components["responses"]["406"];
      409: components["responses"]["409"];
      410: components["responses"]["410"];
      415: components["responses"]["415"];
      429: components["responses"]["429"];
      500: components["responses"]["500"];
    };
  };
  /** Verwijder een ZAAK-VERZOEK. */
  zaakverzoek_delete: {
    parameters: {
      header: {
        /** Identifier of the request, traceable throughout the network */
        "X-NLX-Logrecord-ID"?: string;
        /** Toelichting waarom een bepaald verzoek wordt gedaan */
        "X-Audit-Toelichting"?: string;
      };
    };
    responses: {
      /** No content */
      204: never;
      401: components["responses"]["401"];
      403: components["responses"]["403"];
      404: components["responses"]["404"];
      406: components["responses"]["406"];
      409: components["responses"]["409"];
      410: components["responses"]["410"];
      415: components["responses"]["415"];
      429: components["responses"]["429"];
      500: components["responses"]["500"];
    };
  };
  /**
   * Deze lijst kan gefilterd wordt met query-string parameters.
   *
   * **Opmerking**
   * - er worden enkel zaken getoond van de zaaktypes waar u toe geautoriseerd
   *   bent.
   */
  zaak_list: {
    parameters: {
      query: {
        /** De unieke identificatie van de ZAAK binnen de organisatie die verantwoordelijk is voor de behandeling van de ZAAK. */
        identificatie?: string;
        /** Het RSIN van de Niet-natuurlijk persoon zijnde de organisatie die de zaak heeft gecreeerd. Dit moet een geldig RSIN zijn van 9 nummers en voldoen aan https://nl.wikipedia.org/wiki/Burgerservicenummer#11-proef */
        bronorganisatie?: string;
        /** URL-referentie naar het ZAAKTYPE (in de Catalogi API) in de CATALOGUS waar deze voorkomt */
        zaaktype?: string;
        /** Aanduiding of het zaakdossier blijvend bewaard of na een bepaalde termijn vernietigd moet worden. */
        archiefnominatie?: "blijvend_bewaren" | "vernietigen";
        /** Multiple values may be separated by commas. */
        archiefnominatie__in?: string;
        /** De datum waarop het gearchiveerde zaakdossier vernietigd moet worden dan wel overgebracht moet worden naar een archiefbewaarplaats. Wordt automatisch berekend bij het aanmaken of wijzigen van een RESULTAAT aan deze ZAAK indien nog leeg. */
        archiefactiedatum?: string;
        /** De datum waarop het gearchiveerde zaakdossier vernietigd moet worden dan wel overgebracht moet worden naar een archiefbewaarplaats. Wordt automatisch berekend bij het aanmaken of wijzigen van een RESULTAAT aan deze ZAAK indien nog leeg. */
        archiefactiedatum__lt?: string;
        /** De datum waarop het gearchiveerde zaakdossier vernietigd moet worden dan wel overgebracht moet worden naar een archiefbewaarplaats. Wordt automatisch berekend bij het aanmaken of wijzigen van een RESULTAAT aan deze ZAAK indien nog leeg. */
        archiefactiedatum__gt?: string;
        /** Aanduiding of het zaakdossier blijvend bewaard of na een bepaalde termijn vernietigd moet worden. */
        archiefstatus?:
          | "nog_te_archiveren"
          | "gearchiveerd"
          | "gearchiveerd_procestermijn_onbekend"
          | "overgedragen";
        /** Multiple values may be separated by commas. */
        archiefstatus__in?: string;
        /** De datum waarop met de uitvoering van de zaak is gestart */
        startdatum?: string;
        /** De datum waarop met de uitvoering van de zaak is gestart */
        startdatum__gt?: string;
        /** De datum waarop met de uitvoering van de zaak is gestart */
        startdatum__gte?: string;
        /** De datum waarop met de uitvoering van de zaak is gestart */
        startdatum__lt?: string;
        /** De datum waarop met de uitvoering van de zaak is gestart */
        startdatum__lte?: string;
        /** Type van de `betrokkene`. */
        rol__betrokkeneType?:
          | "natuurlijk_persoon"
          | "niet_natuurlijk_persoon"
          | "vestiging"
          | "organisatorische_eenheid"
          | "medewerker";
        /** URL-referentie naar een betrokkene gerelateerd aan de ZAAK. */
        rol__betrokkene?: string;
        /** Algemeen gehanteerde benaming van de aard van de ROL, afgeleid uit het ROLTYPE. */
        rol__omschrijvingGeneriek?:
          | "adviseur"
          | "behandelaar"
          | "belanghebbende"
          | "beslisser"
          | "initiator"
          | "klantcontacter"
          | "zaakcoordinator"
          | "mede_initiator";
        /** Zaken met een vertrouwelijkheidaanduiding die beperkter is dan de aangegeven aanduiding worden uit de resultaten gefiltered. */
        maximaleVertrouwelijkheidaanduiding?:
          | "openbaar"
          | "beperkt_openbaar"
          | "intern"
          | "zaakvertrouwelijk"
          | "vertrouwelijk"
          | "confidentieel"
          | "geheim"
          | "zeer_geheim";
        /** Het burgerservicenummer, bedoeld in artikel 1.1 van de Wet algemene bepalingen burgerservicenummer. */
        rol__betrokkeneIdentificatie__natuurlijkPersoon__inpBsn?: string;
        /** Een korte unieke aanduiding van de MEDEWERKER. */
        rol__betrokkeneIdentificatie__medewerker__identificatie?: string;
        /** Een korte identificatie van de organisatorische eenheid. */
        rol__betrokkeneIdentificatie__organisatorischeEenheid__identificatie?: string;
        /** Which field to use when ordering the results. */
        ordering?: string;
        /** Een pagina binnen de gepagineerde set resultaten. */
        page?: number;
      };
      header: {
        /** Het gewenste 'Coordinate Reference System' (CRS) van de geometrie in het antwoord (response body). Volgens de GeoJSON spec is WGS84 de default (EPSG:4326 is hetzelfde als WGS84). */
        "Accept-Crs": "EPSG:4326";
        /** Het 'Coordinate Reference System' (CRS) van de geometrie in de vraag (request body). Volgens de GeoJSON spec is WGS84 de default (EPSG:4326 is hetzelfde als WGS84). */
        "Content-Crs": "EPSG:4326";
      };
    };
    responses: {
      /** OK */
      200: {
        headers: {
          /** Het 'Coordinate Reference System' (CRS) van de antwoorddata. Volgens de GeoJSON spec is WGS84 de default (EPSG:4326 is hetzelfde als WGS84). */
          "Content-Crs"?: "EPSG:4326";
          /** Geeft een specifieke API-versie aan in de context van een specifieke aanroep. Voorbeeld: 1.2.1. */
          "API-version"?: string;
        };
        content: {
          "application/json": {
            count: number;
            next?: string | null;
            previous?: string | null;
            results: components["schemas"]["Zaak"][];
          };
        };
      };
      400: components["responses"]["400"];
      401: components["responses"]["401"];
      403: components["responses"]["403"];
      406: components["responses"]["406"];
      409: components["responses"]["409"];
      410: components["responses"]["410"];
      412: components["responses"]["412"];
      415: components["responses"]["415"];
      429: components["responses"]["429"];
      500: components["responses"]["500"];
    };
  };
  /**
   * Indien geen identificatie gegeven is, dan wordt deze automatisch
   * gegenereerd. De identificatie moet uniek zijn binnen de bronorganisatie.
   *
   * **Er wordt gevalideerd op**:
   * - geldigheid `zaaktype` URL - de resource moet opgevraagd kunnen
   *   worden uit de Catalogi API en de vorm van een ZAAKTYPE hebben.
   * - `zaaktype` is geen concept (`zaaktype.concept` = False)
   * - `laatsteBetaaldatum` mag niet in de toekomst liggen.
   * - `laatsteBetaaldatum` mag niet gezet worden als de betalingsindicatie
   *   "nvt" is.
   * - `archiefnominatie` moet een waarde hebben indien `archiefstatus` niet de
   *   waarde "nog_te_archiveren" heeft.
   * - `archiefactiedatum` moet een waarde hebben indien `archiefstatus` niet de
   *   waarde "nog_te_archiveren" heeft.
   * - `archiefstatus` kan alleen een waarde anders dan "nog_te_archiveren"
   *   hebben indien van alle gerelateeerde INFORMATIEOBJECTen het attribuut
   *   `status` de waarde "gearchiveerd" heeft.
   */
  zaak_create: {
    parameters: {
      header: {
        /** Content type van de verzoekinhoud. */
        "Content-Type": "application/json";
        /** Het gewenste 'Coordinate Reference System' (CRS) van de geometrie in het antwoord (response body). Volgens de GeoJSON spec is WGS84 de default (EPSG:4326 is hetzelfde als WGS84). */
        "Accept-Crs": "EPSG:4326";
        /** Het 'Coordinate Reference System' (CRS) van de geometrie in de vraag (request body). Volgens de GeoJSON spec is WGS84 de default (EPSG:4326 is hetzelfde als WGS84). */
        "Content-Crs": "EPSG:4326";
        /** Identifier of the request, traceable throughout the network */
        "X-NLX-Logrecord-ID"?: string;
        /** Toelichting waarom een bepaald verzoek wordt gedaan */
        "X-Audit-Toelichting"?: string;
      };
    };
    responses: {
      /** Created */
      201: {
        headers: {
          /** Geeft een specifieke API-versie aan in de context van een specifieke aanroep. Voorbeeld: 1.2.1. */
          "API-version"?: string;
          /** URL waar de resource leeft. */
          Location?: string;
        };
        content: {
          "application/json": components["schemas"]["Zaak"];
        };
      };
      400: components["responses"]["400"];
      401: components["responses"]["401"];
      403: components["responses"]["403"];
      406: components["responses"]["406"];
      409: components["responses"]["409"];
      410: components["responses"]["410"];
      412: components["responses"]["412"];
      415: components["responses"]["415"];
      429: components["responses"]["429"];
      500: components["responses"]["500"];
    };
    requestBody: components["requestBodies"]["Zaak"];
  };
  /**
   * Zoeken/filteren gaat normaal via de `list` operatie, deze is echter
   * niet geschikt voor geo-zoekopdrachten.
   */
  zaak__zoek: {
    parameters: {
      header: {
        /** Content type van de verzoekinhoud. */
        "Content-Type": "application/json";
        /** Het gewenste 'Coordinate Reference System' (CRS) van de geometrie in het antwoord (response body). Volgens de GeoJSON spec is WGS84 de default (EPSG:4326 is hetzelfde als WGS84). */
        "Accept-Crs": "EPSG:4326";
        /** Het 'Coordinate Reference System' (CRS) van de geometrie in de vraag (request body). Volgens de GeoJSON spec is WGS84 de default (EPSG:4326 is hetzelfde als WGS84). */
        "Content-Crs": "EPSG:4326";
      };
      query: {
        /** Een pagina binnen de gepagineerde set resultaten. */
        page?: number;
      };
    };
    responses: {
      /** OK */
      200: {
        headers: {
          /** Het 'Coordinate Reference System' (CRS) van de antwoorddata. Volgens de GeoJSON spec is WGS84 de default (EPSG:4326 is hetzelfde als WGS84). */
          "Content-Crs"?: "EPSG:4326";
          /** Geeft een specifieke API-versie aan in de context van een specifieke aanroep. Voorbeeld: 1.2.1. */
          "API-version"?: string;
        };
        content: {
          "application/json": {
            count: number;
            next?: string | null;
            previous?: string | null;
            results: components["schemas"]["Zaak"][];
          };
        };
      };
      400: components["responses"]["400"];
      401: components["responses"]["401"];
      403: components["responses"]["403"];
      406: components["responses"]["406"];
      409: components["responses"]["409"];
      410: components["responses"]["410"];
      412: components["responses"]["412"];
      415: components["responses"]["415"];
      429: components["responses"]["429"];
      500: components["responses"]["500"];
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["ZaakZoek"];
      };
    };
  };
  /** Een specifieke ZAAK opvragen. */
  zaak_read: {
    parameters: {
      header: {
        /** Het gewenste 'Coordinate Reference System' (CRS) van de geometrie in het antwoord (response body). Volgens de GeoJSON spec is WGS84 de default (EPSG:4326 is hetzelfde als WGS84). */
        "Accept-Crs": "EPSG:4326";
        /** Het 'Coordinate Reference System' (CRS) van de geometrie in de vraag (request body). Volgens de GeoJSON spec is WGS84 de default (EPSG:4326 is hetzelfde als WGS84). */
        "Content-Crs": "EPSG:4326";
        /** Voer een voorwaardelijk verzoek uit. Deze header moet één of meerdere ETag-waardes bevatten van resources die de consumer gecached heeft. Indien de waarde van de ETag van de huidige resource voorkomt in deze set, dan antwoordt de provider met een lege HTTP 304 request. Zie [MDN](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/If-None-Match) voor meer informatie. */
        "If-None-Match"?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        headers: {
          /** Het 'Coordinate Reference System' (CRS) van de antwoorddata. Volgens de GeoJSON spec is WGS84 de default (EPSG:4326 is hetzelfde als WGS84). */
          "Content-Crs"?: "EPSG:4326";
          /** De ETag berekend op de response body JSON. Indien twee resources exact dezelfde ETag hebben, dan zijn deze resources identiek aan elkaar. Je kan de ETag gebruiken om caching te implementeren. */
          ETag?: string;
          /** Geeft een specifieke API-versie aan in de context van een specifieke aanroep. Voorbeeld: 1.2.1. */
          "API-version"?: string;
        };
        content: {
          "application/json": components["schemas"]["Zaak"];
        };
      };
      401: components["responses"]["401"];
      403: components["responses"]["403"];
      404: components["responses"]["404"];
      406: components["responses"]["406"];
      409: components["responses"]["409"];
      410: components["responses"]["410"];
      412: components["responses"]["412"];
      415: components["responses"]["415"];
      429: components["responses"]["429"];
      500: components["responses"]["500"];
    };
  };
  /**
   * **Er wordt gevalideerd op**
   * - `zaaktype` mag niet gewijzigd worden.
   * - `identificatie` mag niet gewijzigd worden.
   * - `laatsteBetaaldatum` mag niet in de toekomst liggen.
   * - `laatsteBetaaldatum` mag niet gezet worden als de betalingsindicatie
   *   "nvt" is.
   * - `archiefnominatie` moet een waarde hebben indien `archiefstatus` niet de
   *   waarde "nog_te_archiveren" heeft.
   * - `archiefactiedatum` moet een waarde hebben indien `archiefstatus` niet de
   *   waarde "nog_te_archiveren" heeft.
   * - `archiefstatus` kan alleen een waarde anders dan "nog_te_archiveren"
   *   hebben indien van alle gerelateeerde INFORMATIEOBJECTen het attribuut
   *   `status` de waarde "gearchiveerd" heeft.
   *
   * **Opmerkingen**
   * - er worden enkel zaken getoond van de zaaktypes waar u toe geautoriseerd
   *   bent.
   * - indien een zaak heropend moet worden, doe dit dan door een nieuwe status
   *   toe te voegen die NIET de eindstatus is.
   *   Zie de `Status` resource.
   */
  zaak_update: {
    parameters: {
      header: {
        /** Content type van de verzoekinhoud. */
        "Content-Type": "application/json";
        /** Het gewenste 'Coordinate Reference System' (CRS) van de geometrie in het antwoord (response body). Volgens de GeoJSON spec is WGS84 de default (EPSG:4326 is hetzelfde als WGS84). */
        "Accept-Crs": "EPSG:4326";
        /** Het 'Coordinate Reference System' (CRS) van de geometrie in de vraag (request body). Volgens de GeoJSON spec is WGS84 de default (EPSG:4326 is hetzelfde als WGS84). */
        "Content-Crs": "EPSG:4326";
        /** Identifier of the request, traceable throughout the network */
        "X-NLX-Logrecord-ID"?: string;
        /** Toelichting waarom een bepaald verzoek wordt gedaan */
        "X-Audit-Toelichting"?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        headers: {
          /** Het 'Coordinate Reference System' (CRS) van de antwoorddata. Volgens de GeoJSON spec is WGS84 de default (EPSG:4326 is hetzelfde als WGS84). */
          "Content-Crs"?: "EPSG:4326";
          /** Geeft een specifieke API-versie aan in de context van een specifieke aanroep. Voorbeeld: 1.2.1. */
          "API-version"?: string;
        };
        content: {
          "application/json": components["schemas"]["Zaak"];
        };
      };
      400: components["responses"]["400"];
      401: components["responses"]["401"];
      403: components["responses"]["403"];
      404: components["responses"]["404"];
      406: components["responses"]["406"];
      409: components["responses"]["409"];
      410: components["responses"]["410"];
      412: components["responses"]["412"];
      415: components["responses"]["415"];
      429: components["responses"]["429"];
      500: components["responses"]["500"];
    };
    requestBody: components["requestBodies"]["Zaak"];
  };
  /**
   * **De gerelateerde resources zijn hierbij**
   * - `zaak` - de deelzaken van de verwijderde hoofzaak
   * - `status` - alle statussen van de verwijderde zaak
   * - `resultaat` - het resultaat van de verwijderde zaak
   * - `rol` - alle rollen bij de zaak
   * - `zaakobject` - alle zaakobjecten bij de zaak
   * - `zaakeigenschap` - alle eigenschappen van de zaak
   * - `zaakkenmerk` - alle kenmerken van de zaak
   * - `zaakinformatieobject` - dit moet door-cascaden naar de Documenten API,
   *   zie ook: https://github.com/VNG-Realisatie/gemma-zaken/issues/791 (TODO)
   * - `klantcontact` - alle klantcontacten bij een zaak
   */
  zaak_delete: {
    parameters: {
      header: {
        /** Identifier of the request, traceable throughout the network */
        "X-NLX-Logrecord-ID"?: string;
        /** Toelichting waarom een bepaald verzoek wordt gedaan */
        "X-Audit-Toelichting"?: string;
      };
    };
    responses: {
      /** No content */
      204: never;
      401: components["responses"]["401"];
      403: components["responses"]["403"];
      404: components["responses"]["404"];
      406: components["responses"]["406"];
      409: components["responses"]["409"];
      410: components["responses"]["410"];
      412: components["responses"]["412"];
      415: components["responses"]["415"];
      429: components["responses"]["429"];
      500: components["responses"]["500"];
    };
  };
  /** Vraag de headers op die je bij een GET request zou krijgen. */
  zaak_headers: {
    parameters: {
      header: {
        /** Het gewenste 'Coordinate Reference System' (CRS) van de geometrie in het antwoord (response body). Volgens de GeoJSON spec is WGS84 de default (EPSG:4326 is hetzelfde als WGS84). */
        "Accept-Crs": "EPSG:4326";
        /** Het 'Coordinate Reference System' (CRS) van de geometrie in de vraag (request body). Volgens de GeoJSON spec is WGS84 de default (EPSG:4326 is hetzelfde als WGS84). */
        "Content-Crs": "EPSG:4326";
        /** Voer een voorwaardelijk verzoek uit. Deze header moet één of meerdere ETag-waardes bevatten van resources die de consumer gecached heeft. Indien de waarde van de ETag van de huidige resource voorkomt in deze set, dan antwoordt de provider met een lege HTTP 304 request. Zie [MDN](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/If-None-Match) voor meer informatie. */
        "If-None-Match"?: string;
      };
    };
    responses: {
      /** OK */
      200: unknown;
    };
  };
  /**
   * **Er wordt gevalideerd op**
   * - `zaaktype` mag niet gewijzigd worden.
   * - `identificatie` mag niet gewijzigd worden.
   * - `laatsteBetaaldatum` mag niet in de toekomst liggen.
   * - `laatsteBetaaldatum` mag niet gezet worden als de betalingsindicatie
   *   "nvt" is.
   * - `archiefnominatie` moet een waarde hebben indien `archiefstatus` niet de
   *   waarde "nog_te_archiveren" heeft.
   * - `archiefactiedatum` moet een waarde hebben indien `archiefstatus` niet de
   *   waarde "nog_te_archiveren" heeft.
   * - `archiefstatus` kan alleen een waarde anders dan "nog_te_archiveren"
   *   hebben indien van alle gerelateeerde INFORMATIEOBJECTen het attribuut
   *   `status` de waarde "gearchiveerd" heeft.
   *
   * **Opmerkingen**
   * - er worden enkel zaken getoond van de zaaktypes waar u toe geautoriseerd
   *   bent.
   * - indien een zaak heropend moet worden, doe dit dan door een nieuwe status
   *   toe te voegen die NIET de eindstatus is. Zie de `Status` resource.
   */
  zaak_partial_update: {
    parameters: {
      header: {
        /** Content type van de verzoekinhoud. */
        "Content-Type": "application/json";
        /** Het gewenste 'Coordinate Reference System' (CRS) van de geometrie in het antwoord (response body). Volgens de GeoJSON spec is WGS84 de default (EPSG:4326 is hetzelfde als WGS84). */
        "Accept-Crs": "EPSG:4326";
        /** Het 'Coordinate Reference System' (CRS) van de geometrie in de vraag (request body). Volgens de GeoJSON spec is WGS84 de default (EPSG:4326 is hetzelfde als WGS84). */
        "Content-Crs": "EPSG:4326";
        /** Identifier of the request, traceable throughout the network */
        "X-NLX-Logrecord-ID"?: string;
        /** Toelichting waarom een bepaald verzoek wordt gedaan */
        "X-Audit-Toelichting"?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        headers: {
          /** Het 'Coordinate Reference System' (CRS) van de antwoorddata. Volgens de GeoJSON spec is WGS84 de default (EPSG:4326 is hetzelfde als WGS84). */
          "Content-Crs"?: "EPSG:4326";
          /** Geeft een specifieke API-versie aan in de context van een specifieke aanroep. Voorbeeld: 1.2.1. */
          "API-version"?: string;
        };
        content: {
          "application/json": components["schemas"]["Zaak"];
        };
      };
      400: components["responses"]["400"];
      401: components["responses"]["401"];
      403: components["responses"]["403"];
      404: components["responses"]["404"];
      406: components["responses"]["406"];
      409: components["responses"]["409"];
      410: components["responses"]["410"];
      412: components["responses"]["412"];
      415: components["responses"]["415"];
      429: components["responses"]["429"];
      500: components["responses"]["500"];
    };
    requestBody: components["requestBodies"]["Zaak"];
  };
  /** Alle audit trail regels behorend bij de ZAAK. */
  audittrail_list: {
    responses: {
      /** OK */
      200: {
        headers: {
          /** Geeft een specifieke API-versie aan in de context van een specifieke aanroep. Voorbeeld: 1.2.1. */
          "API-version"?: string;
        };
        content: {
          "application/json": components["schemas"]["AuditTrail"][];
        };
      };
      401: components["responses"]["401"];
      403: components["responses"]["403"];
      406: components["responses"]["406"];
      409: components["responses"]["409"];
      410: components["responses"]["410"];
      415: components["responses"]["415"];
      429: components["responses"]["429"];
      500: components["responses"]["500"];
    };
  };
  /** Een specifieke audit trail regel opvragen. */
  audittrail_read: {
    parameters: {
      header: {
        /** Voer een voorwaardelijk verzoek uit. Deze header moet één of meerdere ETag-waardes bevatten van resources die de consumer gecached heeft. Indien de waarde van de ETag van de huidige resource voorkomt in deze set, dan antwoordt de provider met een lege HTTP 304 request. Zie [MDN](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/If-None-Match) voor meer informatie. */
        "If-None-Match"?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        headers: {
          /** De ETag berekend op de response body JSON. Indien twee resources exact dezelfde ETag hebben, dan zijn deze resources identiek aan elkaar. Je kan de ETag gebruiken om caching te implementeren. */
          ETag?: string;
          /** Geeft een specifieke API-versie aan in de context van een specifieke aanroep. Voorbeeld: 1.2.1. */
          "API-version"?: string;
        };
        content: {
          "application/json": components["schemas"]["AuditTrail"];
        };
      };
      401: components["responses"]["401"];
      403: components["responses"]["403"];
      404: components["responses"]["404"];
      406: components["responses"]["406"];
      409: components["responses"]["409"];
      410: components["responses"]["410"];
      415: components["responses"]["415"];
      429: components["responses"]["429"];
      500: components["responses"]["500"];
    };
  };
  /** Alle ZAAKBESLUITen opvragen. */
  zaakbesluit_list: {
    responses: {
      /** OK */
      200: {
        headers: {
          /** Geeft een specifieke API-versie aan in de context van een specifieke aanroep. Voorbeeld: 1.2.1. */
          "API-version"?: string;
        };
        content: {
          "application/json": components["schemas"]["ZaakBesluit"][];
        };
      };
      401: components["responses"]["401"];
      403: components["responses"]["403"];
      406: components["responses"]["406"];
      409: components["responses"]["409"];
      410: components["responses"]["410"];
      415: components["responses"]["415"];
      429: components["responses"]["429"];
      500: components["responses"]["500"];
    };
  };
  /**
   * **LET OP: Dit endpoint hoor je als consumer niet zelf aan te spreken.**
   *
   * De Besluiten API gebruikt dit endpoint om relaties te synchroniseren,
   * daarom is dit endpoint in de Zaken API geimplementeerd.
   *
   * **Er wordt gevalideerd op**
   * - geldigheid URL naar de ZAAK
   */
  zaakbesluit_create: {
    parameters: {
      header: {
        /** Content type van de verzoekinhoud. */
        "Content-Type": "application/json";
        /** Identifier of the request, traceable throughout the network */
        "X-NLX-Logrecord-ID"?: string;
        /** Toelichting waarom een bepaald verzoek wordt gedaan */
        "X-Audit-Toelichting"?: string;
      };
    };
    responses: {
      /** Created */
      201: {
        headers: {
          /** Geeft een specifieke API-versie aan in de context van een specifieke aanroep. Voorbeeld: 1.2.1. */
          "API-version"?: string;
          /** URL waar de resource leeft. */
          Location?: string;
        };
        content: {
          "application/json": components["schemas"]["ZaakBesluit"];
        };
      };
      400: components["responses"]["400"];
      401: components["responses"]["401"];
      403: components["responses"]["403"];
      406: components["responses"]["406"];
      409: components["responses"]["409"];
      410: components["responses"]["410"];
      415: components["responses"]["415"];
      429: components["responses"]["429"];
      500: components["responses"]["500"];
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["ZaakBesluit"];
      };
    };
  };
  /** Een specifiek ZAAKBESLUIT opvragen. */
  zaakbesluit_read: {
    parameters: {
      header: {
        /** Voer een voorwaardelijk verzoek uit. Deze header moet één of meerdere ETag-waardes bevatten van resources die de consumer gecached heeft. Indien de waarde van de ETag van de huidige resource voorkomt in deze set, dan antwoordt de provider met een lege HTTP 304 request. Zie [MDN](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/If-None-Match) voor meer informatie. */
        "If-None-Match"?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        headers: {
          /** De ETag berekend op de response body JSON. Indien twee resources exact dezelfde ETag hebben, dan zijn deze resources identiek aan elkaar. Je kan de ETag gebruiken om caching te implementeren. */
          ETag?: string;
          /** Geeft een specifieke API-versie aan in de context van een specifieke aanroep. Voorbeeld: 1.2.1. */
          "API-version"?: string;
        };
        content: {
          "application/json": components["schemas"]["ZaakBesluit"];
        };
      };
      401: components["responses"]["401"];
      403: components["responses"]["403"];
      404: components["responses"]["404"];
      406: components["responses"]["406"];
      409: components["responses"]["409"];
      410: components["responses"]["410"];
      415: components["responses"]["415"];
      429: components["responses"]["429"];
      500: components["responses"]["500"];
    };
  };
  /**
   * **LET OP: Dit endpoint hoor je als consumer niet zelf aan te spreken.**
   *
   * De Besluiten API gebruikt dit endpoint om relaties te synchroniseren,
   * daarom is dit endpoint in de Zaken API geimplementeerd.
   */
  zaakbesluit_delete: {
    parameters: {
      header: {
        /** Identifier of the request, traceable throughout the network */
        "X-NLX-Logrecord-ID"?: string;
        /** Toelichting waarom een bepaald verzoek wordt gedaan */
        "X-Audit-Toelichting"?: string;
      };
    };
    responses: {
      /** No content */
      204: never;
      401: components["responses"]["401"];
      403: components["responses"]["403"];
      404: components["responses"]["404"];
      406: components["responses"]["406"];
      409: components["responses"]["409"];
      410: components["responses"]["410"];
      415: components["responses"]["415"];
      429: components["responses"]["429"];
      500: components["responses"]["500"];
    };
  };
  /** Alle ZAAKEIGENSCHAPpen opvragen. */
  zaakeigenschap_list: {
    responses: {
      /** OK */
      200: {
        headers: {
          /** Geeft een specifieke API-versie aan in de context van een specifieke aanroep. Voorbeeld: 1.2.1. */
          "API-version"?: string;
        };
        content: {
          "application/json": components["schemas"]["ZaakEigenschap"][];
        };
      };
      401: components["responses"]["401"];
      403: components["responses"]["403"];
      406: components["responses"]["406"];
      409: components["responses"]["409"];
      410: components["responses"]["410"];
      415: components["responses"]["415"];
      429: components["responses"]["429"];
      500: components["responses"]["500"];
    };
  };
  /**
   * Maak een ZAAKEIGENSCHAP aan.
   *
   * **Er wordt gevalideerd op:**
   * - geldigheid `eigenschap` URL - de resource moet opgevraagd kunnen
   *   worden uit de Catalogi API en de vorm van een EIGENSCHAP hebben.
   * - de `eigenschap` moet bij het `ZAAK.zaaktype` horen
   */
  zaakeigenschap_create: {
    parameters: {
      header: {
        /** Content type van de verzoekinhoud. */
        "Content-Type": "application/json";
        /** Identifier of the request, traceable throughout the network */
        "X-NLX-Logrecord-ID"?: string;
        /** Toelichting waarom een bepaald verzoek wordt gedaan */
        "X-Audit-Toelichting"?: string;
      };
    };
    responses: {
      /** Created */
      201: {
        headers: {
          /** Geeft een specifieke API-versie aan in de context van een specifieke aanroep. Voorbeeld: 1.2.1. */
          "API-version"?: string;
          /** URL waar de resource leeft. */
          Location?: string;
        };
        content: {
          "application/json": components["schemas"]["ZaakEigenschap"];
        };
      };
      400: components["responses"]["400"];
      401: components["responses"]["401"];
      403: components["responses"]["403"];
      406: components["responses"]["406"];
      409: components["responses"]["409"];
      410: components["responses"]["410"];
      415: components["responses"]["415"];
      429: components["responses"]["429"];
      500: components["responses"]["500"];
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["ZaakEigenschap"];
      };
    };
  };
  /** Een specifieke ZAAKEIGENSCHAP opvragen. */
  zaakeigenschap_read: {
    parameters: {
      header: {
        /** Voer een voorwaardelijk verzoek uit. Deze header moet één of meerdere ETag-waardes bevatten van resources die de consumer gecached heeft. Indien de waarde van de ETag van de huidige resource voorkomt in deze set, dan antwoordt de provider met een lege HTTP 304 request. Zie [MDN](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/If-None-Match) voor meer informatie. */
        "If-None-Match"?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        headers: {
          /** De ETag berekend op de response body JSON. Indien twee resources exact dezelfde ETag hebben, dan zijn deze resources identiek aan elkaar. Je kan de ETag gebruiken om caching te implementeren. */
          ETag?: string;
          /** Geeft een specifieke API-versie aan in de context van een specifieke aanroep. Voorbeeld: 1.2.1. */
          "API-version"?: string;
        };
        content: {
          "application/json": components["schemas"]["ZaakEigenschap"];
        };
      };
      401: components["responses"]["401"];
      403: components["responses"]["403"];
      404: components["responses"]["404"];
      406: components["responses"]["406"];
      409: components["responses"]["409"];
      410: components["responses"]["410"];
      415: components["responses"]["415"];
      429: components["responses"]["429"];
      500: components["responses"]["500"];
    };
  };
  /** Vraag de headers op die je bij een GET request zou krijgen. */
  zaakeigenschap_headers: {
    parameters: {
      header: {
        /** Voer een voorwaardelijk verzoek uit. Deze header moet één of meerdere ETag-waardes bevatten van resources die de consumer gecached heeft. Indien de waarde van de ETag van de huidige resource voorkomt in deze set, dan antwoordt de provider met een lege HTTP 304 request. Zie [MDN](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/If-None-Match) voor meer informatie. */
        "If-None-Match"?: string;
      };
    };
    responses: {
      /** OK */
      200: unknown;
    };
  };
}
